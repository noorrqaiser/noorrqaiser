{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1z70hNkbtbo6KNK0iN7OkdOtLjLTILEhc",
      "authorship_tag": "ABX9TyMnlGzeIViLRRcCc1St6H8D",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/noorrqaiser/noorrqaiser/blob/main/first_project_noor.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "CDumSma70m4U"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Canada Refugee Statistics Exploratory Data Analysis\n",
        "\n",
        "> **Questions**\n",
        "\n",
        "From which countries has Canada admitted the highest number of refugees?\n",
        "\n",
        ">\n",
        "\n",
        "\n",
        "What are the total number of resettled refugees in Canada per year?\n",
        ">\n",
        "What are the countries of origin for the majority of asylum claims made in Canada?\n",
        "\n",
        ">\n",
        "\n",
        "What is the total number of asylum claims made in Canada every year?\n",
        "\n",
        "What are the general trends in refugee and asylum statistics from 2012-2022?\n",
        "\n"
      ],
      "metadata": {
        "id": "KuM2qXMw4cCc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "path = \"/content/drive/MyDrive/can-stats-2012-22.csv\"\n",
        "df = pd.read_csv(path)\n",
        "\n",
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "y8ekGzXI1SBS",
        "outputId": "f868a434-4307-4210-b1b2-9bf95de3d1fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Year  UNHCR-refugees  Asylum-seekers   total-count\n",
              "count  1870.000000     1870.000000     1870.000000   1870.000000\n",
              "mean   2016.955615      752.438503      323.139572   1075.578075\n",
              "std       3.167123     2427.738942     1181.143362   2980.751399\n",
              "min    2012.000000        0.000000        0.000000      0.000000\n",
              "25%    2014.000000       20.000000        7.000000     39.250000\n",
              "50%    2017.000000      124.000000       36.000000    187.000000\n",
              "75%    2020.000000      563.750000      195.250000    889.750000\n",
              "max    2022.000000    75098.000000    19765.000000  75294.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2daebf40-10cc-4c93-8cf1-7c0fe1f56f70\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Year</th>\n",
              "      <th>UNHCR-refugees</th>\n",
              "      <th>Asylum-seekers</th>\n",
              "      <th>total-count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1870.000000</td>\n",
              "      <td>1870.000000</td>\n",
              "      <td>1870.000000</td>\n",
              "      <td>1870.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2016.955615</td>\n",
              "      <td>752.438503</td>\n",
              "      <td>323.139572</td>\n",
              "      <td>1075.578075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.167123</td>\n",
              "      <td>2427.738942</td>\n",
              "      <td>1181.143362</td>\n",
              "      <td>2980.751399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2012.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2014.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>39.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2017.000000</td>\n",
              "      <td>124.000000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>187.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2020.000000</td>\n",
              "      <td>563.750000</td>\n",
              "      <td>195.250000</td>\n",
              "      <td>889.750000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2022.000000</td>\n",
              "      <td>75098.000000</td>\n",
              "      <td>19765.000000</td>\n",
              "      <td>75294.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2daebf40-10cc-4c93-8cf1-7c0fe1f56f70')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2daebf40-10cc-4c93-8cf1-7c0fe1f56f70 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2daebf40-10cc-4c93-8cf1-7c0fe1f56f70');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-17684cd5-10a1-4ece-b908-6e4582d71f74\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17684cd5-10a1-4ece-b908-6e4582d71f74')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-17684cd5-10a1-4ece-b908-6e4582d71f74 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "8RwsDsqK2Xn9",
        "outputId": "fccb22fe-669e-4aab-b500-8987b78cfc64"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Year    Country-of-origin  UNHCR-refugees  Asylum-seekers  total-count\n",
              "0  2012          Afghanistan            2609             411         3020\n",
              "1  2012              Albania            1764             579         2343\n",
              "2  2012              Algeria             513             284          797\n",
              "3  2012               Angola             753              21          774\n",
              "4  2012  Antigua and Barbuda              40              30           70"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e80796b2-a61e-4126-adc3-065174702622\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Year</th>\n",
              "      <th>Country-of-origin</th>\n",
              "      <th>UNHCR-refugees</th>\n",
              "      <th>Asylum-seekers</th>\n",
              "      <th>total-count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2012</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2609</td>\n",
              "      <td>411</td>\n",
              "      <td>3020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2012</td>\n",
              "      <td>Albania</td>\n",
              "      <td>1764</td>\n",
              "      <td>579</td>\n",
              "      <td>2343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2012</td>\n",
              "      <td>Algeria</td>\n",
              "      <td>513</td>\n",
              "      <td>284</td>\n",
              "      <td>797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012</td>\n",
              "      <td>Angola</td>\n",
              "      <td>753</td>\n",
              "      <td>21</td>\n",
              "      <td>774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2012</td>\n",
              "      <td>Antigua and Barbuda</td>\n",
              "      <td>40</td>\n",
              "      <td>30</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e80796b2-a61e-4126-adc3-065174702622')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e80796b2-a61e-4126-adc3-065174702622 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e80796b2-a61e-4126-adc3-065174702622');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1511e9d0-5835-448f-980d-8b6901a116b3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1511e9d0-5835-448f-980d-8b6901a116b3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1511e9d0-5835-448f-980d-8b6901a116b3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iS-8aMed4NMa",
        "outputId": "e9847481-151b-4c66-ed19-7f8238140345"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method DataFrame.info of       Year                   Country-of-origin  UNHCR-refugees  \\\n",
              "0     2012                         Afghanistan            2609   \n",
              "1     2012                             Albania            1764   \n",
              "2     2012                             Algeria             513   \n",
              "3     2012                              Angola             753   \n",
              "4     2012                 Antigua and Barbuda              40   \n",
              "...    ...                                 ...             ...   \n",
              "1865  2022  Venezuela (Bolivarian Republic of)            1497   \n",
              "1866  2022                      Western Sahara               5   \n",
              "1867  2022                               Yemen             450   \n",
              "1868  2022                              Zambia              23   \n",
              "1869  2022                            Zimbabwe             309   \n",
              "\n",
              "      Asylum-seekers  total-count  \n",
              "0                411         3020  \n",
              "1                579         2343  \n",
              "2                284          797  \n",
              "3                 21          774  \n",
              "4                 30           70  \n",
              "...              ...          ...  \n",
              "1865            2104         3601  \n",
              "1866               0            5  \n",
              "1867             452          902  \n",
              "1868              25           48  \n",
              "1869             562          871  \n",
              "\n",
              "[1870 rows x 5 columns]>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top_unhcr_refugees = df.groupby('Country-of-origin')['UNHCR-refugees'].sum().reset_index(name='UNHCR-refugees').sort_values(by='UNHCR-refugees', ascending=False).head(10)\n",
        "top_unhcr_refugees.reset_index(drop=True).style.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "n7L2KFhx5N97",
        "outputId": "00ccee45-250a-4994-fd93-d2e9ddda50f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7de8b1146e30>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_2a134_row0_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 100.0%, transparent 100.0%);\n",
              "}\n",
              "#T_2a134_row1_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 90.9%, transparent 90.9%);\n",
              "}\n",
              "#T_2a134_row2_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 81.5%, transparent 81.5%);\n",
              "}\n",
              "#T_2a134_row3_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 68.9%, transparent 68.9%);\n",
              "}\n",
              "#T_2a134_row4_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 65.4%, transparent 65.4%);\n",
              "}\n",
              "#T_2a134_row5_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 61.2%, transparent 61.2%);\n",
              "}\n",
              "#T_2a134_row6_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 55.9%, transparent 55.9%);\n",
              "}\n",
              "#T_2a134_row7_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 47.1%, transparent 47.1%);\n",
              "}\n",
              "#T_2a134_row8_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 39.2%, transparent 39.2%);\n",
              "}\n",
              "#T_2a134_row9_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 37.7%, transparent 37.7%);\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_2a134\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_2a134_level0_col0\" class=\"col_heading level0 col0\" >Country-of-origin</th>\n",
              "      <th id=\"T_2a134_level0_col1\" class=\"col_heading level0 col1\" >UNHCR-refugees</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_2a134_row0_col0\" class=\"data row0 col0\" >Colombia</td>\n",
              "      <td id=\"T_2a134_row0_col1\" class=\"data row0 col1\" >108416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_2a134_row1_col0\" class=\"data row1 col0\" >China</td>\n",
              "      <td id=\"T_2a134_row1_col1\" class=\"data row1 col1\" >98586</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_2a134_row2_col0\" class=\"data row2 col0\" >Ukraine</td>\n",
              "      <td id=\"T_2a134_row2_col1\" class=\"data row2 col1\" >88376</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_2a134_row3_col0\" class=\"data row3 col0\" >Pakistan</td>\n",
              "      <td id=\"T_2a134_row3_col1\" class=\"data row3 col1\" >74737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_2a134_row4_col0\" class=\"data row4 col0\" >Haiti</td>\n",
              "      <td id=\"T_2a134_row4_col1\" class=\"data row4 col1\" >70956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_2a134_row5_col0\" class=\"data row5 col0\" >Sri Lanka</td>\n",
              "      <td id=\"T_2a134_row5_col1\" class=\"data row5 col1\" >66343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_2a134_row6_col0\" class=\"data row6 col0\" >Nigeria</td>\n",
              "      <td id=\"T_2a134_row6_col1\" class=\"data row6 col1\" >60554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_2a134_row7_col0\" class=\"data row7 col0\" >Mexico</td>\n",
              "      <td id=\"T_2a134_row7_col1\" class=\"data row7 col1\" >51072</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_2a134_row8_col0\" class=\"data row8 col0\" >Türkiye</td>\n",
              "      <td id=\"T_2a134_row8_col1\" class=\"data row8 col1\" >42533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a134_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_2a134_row9_col0\" class=\"data row9 col0\" >Iran (Islamic Rep. of)</td>\n",
              "      <td id=\"T_2a134_row9_col1\" class=\"data row9 col1\" >40881</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "df.figure = top_unhcr_refugees\n",
        "sns.barplot(data=top_unhcr_refugees, x='Country-of-origin', y='UNHCR-refugees', palette='plasma')\n",
        "\n",
        "# Add labels and titles\n",
        "plt.xlabel('Country of Origin')\n",
        "plt.ylabel('Resettled refugees')\n",
        "plt.title('Top Countries of origin for Resettled Refugees in Canada (2012-2022)')\n",
        "\n",
        "# Rotate x-axis labels for better visibility\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "# Display plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "YzvHTXqP-SvQ",
        "outputId": "6638fc4f-8a1e-44e9-92e8-ae5ec6c6df44"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Q2: Total Number of Refugees Settled in Canada/ Year"
      ],
      "metadata": {
        "id": "BYeSkwxVAipC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "total_refugees_yrly = df.groupby('Year')['UNHCR-refugees'].sum().reset_index(name='UNHCR-refugees').sort_values(by='Year')\n",
        "\n",
        "total_refugees_yrly.reset_index(drop=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "JkRQ62r6AsEQ",
        "outputId": "1c7dd411-8e4e-4de4-f3e0-5d4bfd8008cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Year  UNHCR-refugees\n",
              "0   2012          163751\n",
              "1   2013          160347\n",
              "2   2014          149164\n",
              "3   2015          135890\n",
              "4   2016           97322\n",
              "5   2017          104768\n",
              "6   2018          114101\n",
              "7   2019          101757\n",
              "8   2020          109214\n",
              "9   2021          130125\n",
              "10  2022          140621"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4be46c0-a4a7-45e3-9b23-2bd63ddbbe59\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Year</th>\n",
              "      <th>UNHCR-refugees</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2012</td>\n",
              "      <td>163751</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2013</td>\n",
              "      <td>160347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2014</td>\n",
              "      <td>149164</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2015</td>\n",
              "      <td>135890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016</td>\n",
              "      <td>97322</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2017</td>\n",
              "      <td>104768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2018</td>\n",
              "      <td>114101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2019</td>\n",
              "      <td>101757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2020</td>\n",
              "      <td>109214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021</td>\n",
              "      <td>130125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2022</td>\n",
              "      <td>140621</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4be46c0-a4a7-45e3-9b23-2bd63ddbbe59')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e4be46c0-a4a7-45e3-9b23-2bd63ddbbe59 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e4be46c0-a4a7-45e3-9b23-2bd63ddbbe59');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a097ceae-a34d-43a5-8b50-8fa709e55f08\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a097ceae-a34d-43a5-8b50-8fa709e55f08')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a097ceae-a34d-43a5-8b50-8fa709e55f08 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "sns.lineplot(data=total_refugees_yrly, x='Year', y='UNHCR-refugees', marker='o')\n",
        "\n",
        "# Add labels and title\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Resettled Refugees')\n",
        "plt.title('Total Number of Resettled Refugees (2012-2022)')\n",
        "\n",
        "# Display plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "Eosiz56wA8bU",
        "outputId": "74ea405c-8323-48a4-e8a4-4e20a26bf89f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Q3: Countries of Origin for Majority of Asylum Claims Made in Canada"
      ],
      "metadata": {
        "id": "HG_dHvUjBNRc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a DataFrame with the top countries and their Asylum-seekers sum, then sort values in desc order\n",
        "top_asylum_seekers = df.groupby('Country-of-origin')['Asylum-seekers'].sum().reset_index(name='Asylum-seekers').sort_values(by='Asylum-seekers', ascending=False).head(10)\n",
        "\n",
        "# Display the DataFrame with the top countries for Asylum-seekers\n",
        "top_asylum_seekers.reset_index(drop=True).style.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "-Vh6yrdYBQBn",
        "outputId": "eb99f8b9-ef9d-4636-f297-f5723cfc29b1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7de89b01b7c0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_8a222_row0_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 100.0%, transparent 100.0%);\n",
              "}\n",
              "#T_8a222_row1_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 92.0%, transparent 92.0%);\n",
              "}\n",
              "#T_8a222_row2_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 87.0%, transparent 87.0%);\n",
              "}\n",
              "#T_8a222_row3_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 84.0%, transparent 84.0%);\n",
              "}\n",
              "#T_8a222_row4_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 72.9%, transparent 72.9%);\n",
              "}\n",
              "#T_8a222_row5_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 54.3%, transparent 54.3%);\n",
              "}\n",
              "#T_8a222_row6_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 38.4%, transparent 38.4%);\n",
              "}\n",
              "#T_8a222_row7_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 33.9%, transparent 33.9%);\n",
              "}\n",
              "#T_8a222_row8_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 32.4%, transparent 32.4%);\n",
              "}\n",
              "#T_8a222_row9_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 26.8%, transparent 26.8%);\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_8a222\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_8a222_level0_col0\" class=\"col_heading level0 col0\" >Country-of-origin</th>\n",
              "      <th id=\"T_8a222_level0_col1\" class=\"col_heading level0 col1\" >Asylum-seekers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_8a222_row0_col0\" class=\"data row0 col0\" >Unknown</td>\n",
              "      <td id=\"T_8a222_row0_col1\" class=\"data row0 col1\" >56098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_8a222_row1_col0\" class=\"data row1 col0\" >Nigeria</td>\n",
              "      <td id=\"T_8a222_row1_col1\" class=\"data row1 col1\" >51620</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_8a222_row2_col0\" class=\"data row2 col0\" >India</td>\n",
              "      <td id=\"T_8a222_row2_col1\" class=\"data row2 col1\" >48806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_8a222_row3_col0\" class=\"data row3 col0\" >Mexico</td>\n",
              "      <td id=\"T_8a222_row3_col1\" class=\"data row3 col1\" >47146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_8a222_row4_col0\" class=\"data row4 col0\" >Haiti</td>\n",
              "      <td id=\"T_8a222_row4_col1\" class=\"data row4 col1\" >40908</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_8a222_row5_col0\" class=\"data row5 col0\" >Colombia</td>\n",
              "      <td id=\"T_8a222_row5_col1\" class=\"data row5 col1\" >30475</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_8a222_row6_col0\" class=\"data row6 col0\" >China</td>\n",
              "      <td id=\"T_8a222_row6_col1\" class=\"data row6 col1\" >21526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_8a222_row7_col0\" class=\"data row7 col0\" >Pakistan</td>\n",
              "      <td id=\"T_8a222_row7_col1\" class=\"data row7 col1\" >19023</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_8a222_row8_col0\" class=\"data row8 col0\" >Türkiye</td>\n",
              "      <td id=\"T_8a222_row8_col1\" class=\"data row8 col1\" >18166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8a222_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_8a222_row9_col0\" class=\"data row9 col0\" >Iran (Islamic Rep. of)</td>\n",
              "      <td id=\"T_8a222_row9_col1\" class=\"data row9 col1\" >15011</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create Seaborn bar graph to visualize top 10 countries of origin for asylum seekers in Canada\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.barplot(data=top_asylum_seekers, x='Country-of-origin', y='Asylum-seekers', palette='plasma')\n",
        "\n",
        "# Add labels and title\n",
        "plt.xlabel('Country of Origin')\n",
        "plt.ylabel('Asylum Seekers')\n",
        "plt.title('Countries of Origin for Majority of Asylum Seekers from 2012-2022')\n",
        "\n",
        "# Rotate x-axis labels for better visibility\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "# Display plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "b5AT_-POBd94",
        "outputId": "9cca2681-aec7-4625-f8f7-bd6006b99851"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "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Y+fho48+Mkm2evVq69Wrl2XJksXSpk1rTZs2tePHj3u8T5LHjzuAu5exYsUK69q1q2XNmtUyZszoMW/fvn0edfz4449WpUoVS5s2raVPn97q168fYyfh6NGj9swzz9iDDz5oPj4+lj17dmvcuHGMZcVm6dKlzvIDAgKscePGtmPHDmd++/btb/l9YjNs2DCTZB9//HGs8//++29LmTKlhYaGxujbuPZLZGSkDR482HLkyGFp0qSxGjVq2Pbt22P8zpYvX26SbPny5c40d4jdvn271ahRw9KkSWM5c+a04cOH37af3IHo5h/3si9evGi9e/e2XLlymY+Pjz300EP27rvvxjhDL8m6detmn376qQUHB1uqVKns22+/veXnuusdMmSI5ciRw2On9csvv7RUqVLZF198ESN079+/37p27WoPPfSQ+fn5WaZMmaxly5Yx1onY+si97DJlypifn59lzpzZ2rZta//8849HG3co2rt3r9WrV8/Sp09vTZo0ceblzZv3tn03ePBgmz59ukmyzZs3x/jub731lqVIkSLG595s8+bN9thjj1mGDBksXbp0VqtWLVu3bp0zf/DgwTE+213b7fz8889O8Pjiiy8sRYoUdujQoRjtNm7caHXr1rXMmTObn5+f5cuXzzp06GBmN0JB3rx5rXHjxjHe5z5o8uyzz3r0U/TQXb169Vj/v0Xv3+jvfffdd238+PEWFBRkadKksTp16tjBgwctKirKhg4dag8++KD5+flZ48aN7dSpU3fsA19fX3vmmWfu2M7sxv/L0aNHW3BwsPn6+lpgYKA9++yzdvr06Rht47Jdiy10//bbb5YlSxarXr26E4D++ecf69ChgwUGBpqPj48FBwfbtGnTPN7nXs8/++wze/XVVy1nzpzmcrnszJkzFhERYUOGDLGCBQuar6+vZcqUySpXrmyLFy++5Xe93Trlnrd9+3Zr3bq1ZcyY0UqVKmVmcf+7lDdvXmvQoIEtX77cypYta35+flasWDHn/+nXX39txYoVM19fXytTpkys/3/iqnnz5pYpUyaPaeXLl7fy5cvHaFu3bl0rUKDALZd1u9B9K5kyZbLmzZvH6z3RjRs3ziTZtm3bnGl9+/a1lClT2rlz5zzavv322ybJDh48eNtlfv/99ybJvv/++zt+fmz9ByQHqf7t5ekAkqZ58+Ypf/78euSRR+LUvnPnzpo5c6Zatmypl156SevXr9ewYcO0c+dOffvtt3ddxwsvvKAHHnhAgwcP1v79+zVmzBh1797dua9szJgxeuGFF5Q+fXq9+uqrkqRs2bJ5LON///ufsmbNqkGDBunSpUu3/KxPPvlE7du3V2hoqIYPH67Lly9r0qRJqlKlin777TdnoKoWLVpo+/bteuGFF5QvXz4dP35cS5Ys0cGDB287mNVPP/2kevXqKX/+/BoyZIiuXLmi999/X5UrV9bmzZuVL18+Pffcc3rwwQf19ttvq0ePHipfvnyM7xPdvHnz5OfnpyeeeCLW+UFBQapSpYqWLVumK1euKE2aNPHulwEDBmjEiBFq1KiRQkNDtXXrVoWGhurq1au3fE90Z86c0WOPPabmzZvriSee0FdffaX+/furePHiqlevXqzvyZo1qz755BO99dZbunjxooYNGyZJKlKkiMxMjRs31vLly9WpUyeVKlVKixYtUt++fXX48GGNHj3aY1nLli3Tl19+qe7duytLlixxGnCsTZs2zj3RtWrVkiTNnj1bjz76qAIDA2O037hxo9auXatWrVopV65c2r9/vyZNmqQaNWpox44dSps27S0/a8aMGerQoYPKly+vYcOG6dixYxo7dqzWrFmj3377TRkzZnTaXr9+XaGhoapSpYree++9WJebNWtWTZo0SV27dlWzZs3UvHlzSVKJEiUUFBSkbt26adasWSpdurTH+2bNmqUaNWrowQcfvGWt27dvV9WqVeXv769+/fopderU+uCDD1SjRg2tXLlSFStWVPPmzZUxY0b16tVLrVu3Vv369eM0QNesWbNUoEABlS9fXsWKFVPatGn12WefqW/fvk6b48ePq27dusqaNatefvllZcyYUfv379c333wjSXK5XHrqqac0YsQInT59WpkyZXLeO2/ePJ0/f15PPfXUHWuJq1mzZikiIkIvvPCCTp8+rREjRuiJJ55QrVq1tGLFCvXv31979+7V+++/rz59+mj69Om3XV7evHm1dOlS/fPPP8qVK9dt2z733HPOutOjRw/t27dP48eP12+//aY1a9YoderUkuK+XbvZxo0bFRoaqnLlymnu3LlKkyaNjh07pkqVKsnlcql79+7KmjWrFixYoE6dOun8+fPq2bOnxzLeeOMN+fj4qE+fPgoPD5ePj4+GDBmiYcOGqXPnzqpQoYLOnz+vX3/9VZs3b1adOnVirSUu69Tjjz+uQoUK6e2335aZSYrf36W9e/eqTZs2eu655/TUU0/pvffeU6NGjTR58mS98sor+t///idJGjZsmJ544gnt3r1bKVLEf+ijsLAwZcmSxXkdFRWlbdu2qWPHjjHaVqhQQYsXL9aFCxeUIUOGeH/WzS5evKiLFy96fH58hYWFSZLHMn777Tc99NBD8vf392hboUIFSdKWLVuUO3fueC3zdm3/Tf3AfSuxUz+Ae+/cuXMmyTmLdidbtmwxSda5c2eP6X369DFJtmzZMmea4nmmu3bt2h5nL3v16mUpU6a0s2fPOtNudXm5exlVqlSx69evxzrPfSbywoULljFjxhj3qYeFhVlAQIAz/cyZM/G+bNatVKlSFhgY6HHGa+vWrZYiRQqP+9ncZ4nicvlyxowZrWTJkrdt06NHD48zE/Hpl7CwMEuVKpU1bdrUo92QIUNMUpzOdOumM/Hh4eGWPXt2a9GixR2/n/vMc3TfffedSbI333zTY3rLli3N5XJ5XGYvyVKkSGHbt2+/42fd/HnlypWzTp06mdmN37uPj4/NnDkz1t/P5cuXYyxr3bp1Mb77zX0UERFhgYGBVqxYMY/L3ufPnx/j3kn3VRAvv/xyjM+6+Uzs7S4vb926teXMmdPjLP7mzZvjdKl106ZNzcfHx/766y9n2pEjRyxDhgxWrVo1Z1r0M8FxERERYZkzZ/a47LVNmzYx1u1vv/3WJNnGjRtvuazdu3ebJJs0aZLH9MaNG1u+fPmc7UlCnOnOmjWrx7ZowIABJslKlixp165dc6a3bt3afHx8Ypxhvdm0adNMkvn4+FjNmjXttddes59//jnGZcLuqwJmzZrlMX3hwoUe0+O6XXN/R/eZbvc4EQ0aNPCouVOnTpYjR44Y9xm3atXKAgICnP8H7vU8f/78Mf5vlCxZ0ho0aHDbfojNrdYp95nu1q1be0yPz98l9xVTa9eudaYtWrTIJFmaNGnswIEDzvQPPvgg1qtV4mLVqlXmcrnstddec6a5/68OHTo0RvsJEyaYJNu1a1esy4vvme433njDJNnSpUvjXbuZ2alTpywwMNCqVq3qMb1o0aJWq1atGO23b99ukmzy5Mm3XGZ4eLgFBwdbUFCQx/+Z2MTWf0BywejlwH/Q+fPnJSnOR9Z//PFHSVLv3r09pr/00kuSpB9++OGua3n22Wflcrmc11WrVlVkZKQOHDgQ52V06dJFKVOmvG2bJUuW6OzZs2rdurVOnjzp/KRMmVIVK1bU8uXLJUlp0qSRj4+PVqxYoTNnzsS5hqNHj2rLli165plnPM6+lShRQnXq1HH6ML7icgbEPd/9e3WLS78sXbpU169fd87yuL3wwgtxrjF9+vQeZxd9fHxUoUKFWEfmjYsff/xRKVOmVI8ePTymv/TSSzIzLViwwGN69erVFRwcHO/PadOmjb755htFREToq6++UsqUKdWsWbNY20a/guDatWs6deqUChYsqIwZM2rz5s23/Ixff/1Vx48f1//+9z/5+fk50xs0aKDChQvH+n+na9eu8f4u0T399NM6cuSIs05LN87YpkmTRi1atLjl+yIjI7V48WI1bdpU+fPnd6bnyJFDbdq00erVq2OsY3G1YMECnTp1Sq1bt3amtW7dWlu3btX27dudae6z/vPnz9e1a9diXdZDDz2kihUratasWc6006dPa8GCBWrbtq3H9uTfevzxxxUQEOC8rlixoiTpqaeeUqpUqTymR0RE6PDhw7ddXseOHbVw4ULVqFFDq1ev1htvvKGqVauqUKFCWrt2rdNuzpw5CggIUJ06dTy2V2XLllX69Omd321ct2vRLV++XKGhoXr00Uf1zTffyNfXV5JkZvr666/VqFEjmZnH8kJDQ3Xu3LkY63r79u09/m9IN36H27dv1549e+LSxXH2/PPPe7yO79+l4OBghYSEOK/dv8tatWopT548MabHd/t1/PhxtWnTRkFBQerXr58z3f0UEHc/R+feJiTEk0JWrVql119/3bkSI76ioqLUtm1bnT17Vu+//77HvCtXrtx1/d27d9eOHTs0fvx4j/8zN7tV/wHJBaEb+A9yXyJ24cKFOLU/cOCAUqRIoYIFC3pMz549uzJmzBivgHyz6Ds7kvTAAw9IUrwCb1BQ0B3buHcAa9WqpaxZs3r8LF68WMePH5d0Y8do+PDhWrBggbJly6Zq1appxIgRzuVxt+Lug4cffjjGvCJFiujkyZO3vcT7VjJkyHDH35N7/s3hPC794q775t9tpkyZnN/FneTKlStG0HnggQfi9Tu8uaacOXPG+D5FihTxqNktLt8zNq1atdK5c+e0YMECzZo1Sw0bNrzlAY4rV65o0KBByp07t3x9fZUlSxZlzZpVZ8+e1blz5277XaTY14vChQvH+C6pUqW642XHd1KnTh3lyJHDCaVRUVH67LPP1KRJk9sewDlx4oQuX758y3U4KipKhw4duquaPv30UwUFBcnX11d79+7V3r17VaBAAaVNm9YjPFevXl0tWrTQ66+/rixZsqhJkyb66KOPFB4e7rG8p59+WmvWrHH6b86cObp27ZratWt3V/Xdys3bJ3cAv/lSWvf0uKzzoaGhWrRokc6ePatVq1apW7duOnDggBo2bOhsh/bs2aNz584pMDAwxvbq4sWLHu2kO2/X3K5evaoGDRqodOnS+vLLL+Xj4+PMO3HihM6ePaspU6bEWFaHDh0kKcbyYvu/N3ToUJ09e1YPPfSQihcvrr59+2rbtm137Jc7ufmz4vt3yRu/S7dLly6pYcOGunDhgubOnetxabz7oMTN67Ak5xaemw9cxNeuXbvUrFkzFStWTFOnTvWYd/r0aYWFhTk/t9pevfDCC1q4cKGmTp2qkiVLesxLkybNXdX/7rvv6sMPP9Qbb7yh+vXr37L+2/UfkFxwTzfwH+Tv76+cOXPqjz/+iNf7/s0ZpJuf0el2qzOx9v/v2YuLuOywREVFSbpx/2P27NljzI9+BL5nz55q1KiRvvvuOy1atEivvfaahg0bpmXLlsW4T9bbihQpot9++03h4eGxnmmQpG3btil16tQxnj39b3fk4iohfof/xt1+zxw5cqhGjRoaOXKk1qxZo6+//vqWbV944QV99NFH6tmzp0JCQhQQECCXy6VWrVo561ZC8PX1vav7SKNLmTKl2rRpow8//FATJ07UmjVrdOTIkQS91zk+zp8/r3nz5unq1auxPh999uzZeuuttzyej/7LL79o3rx5WrRokTp27KiRI0fql19+cXbGW7VqpV69emnWrFl65ZVX9Omnn6pcuXKxHjCIzuVyxbpexnf7lBDrfNq0aVW1alVVrVpVWbJk0euvv64FCxaoffv2ioqKUmBgoMcBieiyZs0qKX7bNenG+lW/fn3NnTtXCxcuVMOGDZ157mU99dRTat++fayfW6JECY/Xsf3fq1atmv766y/NnTtXixcv1tSpUzV69GhNnjxZnTt3vlV33NGt/p/H9e+St36XERERat68ubZt26ZFixapWLFiHvMzZcokX1/fWJ+f7Z6WM2fOOH1WbA4dOqS6desqICBAP/74Y4wDa82bN9fKlSud1+3bt9eMGTM82rz++uuaOHGi3nnnnVgPXOXIkSPWqzhuV/+MGTPUv39/Pf/88xo4cOAt679T/wHJBaEb+I9q2LChpkyZonXr1nlcchebvHnzKioqSnv27HHONkrSsWPHdPbsWeXNm9eZ9sADD+js2bMe74+IiIh1hyOuEuJy0QIFCkiSAgMDVbt27Ti1f+mll/TSSy9pz549KlWqlEaOHKlPP/001vbuPti9e3eMebt27VKWLFmULl26eNfdsGFDrVu3TnPmzIk1NO3fv18///yzateufVfh01333r17Pc4knTp16q7PVP9befPm1U8//RTj0vpdu3Y58xNKmzZt1LlzZ2XMmPG2Z2K++uortW/fXiNHjnSmXb16Nca6frPo68XNl3zu3r37rr/Lnf5PPP300xo5cqTmzZunBQsWKGvWrAoNDb3te7Jmzaq0adPech1OkSLFbQdLupVvvvlGV69e1aRJk2IMkLR7924NHDhQa9asUZUqVZzplSpVUqVKlfTWW29p9uzZatu2rT7//HMntGXKlEkNGjTQrFmz1LZtW61Zs0Zjxoy5Yy0PPPBArJcN/5urdRJCuXLlJP1fiClQoIB++uknVa5c+bb/r+O7XXO5XJo1a5aaNGmixx9/XAsWLFCNGjUk3fj9Z8iQQZGRkXFa1u1kypRJHTp0UIcOHXTx4kVVq1ZNQ4YM+Veh+2bx+bvkLVFRUXr66ae1dOlSffnll6pevXqMNilSpFDx4sX166+/xpi3fv165c+f/64HUTt16pTq1q2r8PBwLV26VDly5IjRZuTIkR7b8psD8oQJEzRkyBD17NlT/fv3j/VzSpUqpeXLl+v8+fMeg6mtX7/emR/d3Llz1blzZzVv3lwTJky4Zf1x6T8gueDycuA/ql+/fkqXLp06d+6sY8eOxZj/119/aezYsZLkhJGbd2pHjRol6cb9qW4FChTQqlWrPNpNmTLllmeS4iJdunR3DDd3EhoaKn9/f7399tux3it64sQJSdLly5djjNpdoEABZciQIdbL69xy5MihUqVKaebMmR61/vHHH1q8ePFtA93tPPfccwoMDFTfvn1jhIWrV6+qQ4cOMjMNGjTorpb/6KOPKlWqVJo0aZLH9PHjx9/V8hJC/fr1FRkZGaOG0aNHy+Vy3XJE9LvRsmVLDR48WBMnTvS41PZmKVOmjHHm6/3337/jel2uXDkFBgZq8uTJHuvPggULtHPnTo//O/HhHtX8Vv8vSpQooRIlSmjq1Kn6+uuv1apVq9veTynd+I5169bV3LlztX//fmf6sWPHNHv2bFWpUiXG6MVx8emnnyp//vx6/vnn1bJlS4+fPn36KH369M4Z3TNnzsToZ/cO/c3//9q1a6cdO3aob9++SpkypVq1anXHWgoUKKBdu3Y5/98laevWrVqzZk28v9fdWLp0aazT3fcnu8/UP/HEE4qMjNQbb7wRo+3169ed33tct2vR+fj46JtvvlH58uXVqFEjbdiwQdKN33+LFi309ddfx3oVVGzLis2pU6c8XqdPn14FCxa87fbzbsTn75K3vPDCC/riiy80ceJE5ykCsWnZsqU2btzoEbx3796tZcuW6fHHH7+rz7506ZLq16+vw4cP68cff4z1KhJJKlu2rGrXru38RB//4osvvlCPHj3Utm1bp99uVX9kZKSmTJniTAsPD9dHH32kihUrehyMW7VqlVq1aqVq1app1qxZt71yJ679ByQHnOkG/qMKFCig2bNn68knn1SRIkX09NNPq1ixYoqIiNDatWs1Z84cPfPMM5KkkiVLqn379poyZYrOnj2r6tWra8OGDZo5c6aaNm2qmjVrOsvt3Lmznn/+ebVo0UJ16tTR1q1btWjRon/1CJCyZctq0qRJevPNN1WwYEEFBgbGe6AYf39/TZo0Se3atVOZMmXUqlUrZc2aVQcPHtQPP/ygypUra/z48frzzz/16KOP6oknnlBwcLBSpUqlb7/9VseOHbvjTv27776revXqKSQkRJ06dXIeGRYQEKAhQ4bc1XfPnDmzvvrqKzVo0EBlypRR586dFRwcrLCwMM2YMUN79+7V2LFj4/zot5tly5ZNL774okaOHKnGjRvrscce09atW7VgwQJlyZIlQQeliqtGjRqpZs2aevXVV7V//36VLFlSixcv1ty5c9WzZ0/n7F5CiOvvpmHDhvrkk08UEBCg4OBgrVu3Tj/99JMyZ8582/elTp1aw4cPV4cOHVS9enW1bt3aeWRYvnz51KtXr7uqO02aNAoODtYXX3yhhx56SJkyZVKxYsU8Ls18+umn1adPH0mK86Xlb775ppYsWaIqVarof//7n1KlSqUPPvhA4eHhGjFiRLzrdA/odvOgeG6+vr4KDQ3VnDlzNG7cOM2cOVMTJ05Us2bNVKBAAV24cEEffvih/P39Yxy4atCggTJnzqw5c+aoXr16sT7q7WYdO3bUqFGjFBoaqk6dOun48eOaPHmyihYteteDxMVHkyZNFBQUpEaNGqlAgQK6dOmSfvrpJ82bN88JwdKNe9ufe+45DRs2TFu2bFHdunWVOnVq7dmzR3PmzNHYsWPVsmXLOG/XbpYmTRrNnz9ftWrVUr169bRy5UoVK1ZM77zzjpYvX66KFSuqS5cuCg4O1unTp7V582b99NNPOn369B2/Y3BwsGrUqKGyZcsqU6ZM+vXXX/XVV1+pe/fuCdqX8fm75A1jxozRxIkTFRISorRp08a4CqpZs2bO1U3/+9//9OGHH6pBgwbq06ePUqdOrVGjRilbtmzOwG9u8+bN09atWyXdGLRx27ZtevPNNyVJjRs3di7xb9u2rTZs2KCOHTtq586d2rlzp7OM9OnTq2nTpretf8OGDXr66aeVOXNmPfroozFuZXjkkUecARUrVqyoxx9/XAMGDNDx48dVsGBBzZw5U/v379e0adOc9xw4cECNGzeWy+VSy5YtNWfOHI9lug8Gxrf/gGQhkUZNB3Cf+PPPP61Lly6WL18+8/HxsQwZMljlypXt/fff93iUzLVr1+z111+3oKAgS506teXOndsGDBgQ4xE5kZGR1r9/f8uSJYulTZvWQkNDbe/evbd8ZNjNjwaK7bFUYWFh1qBBA8uQIYNJch75c6tlRJ/nfjRW9OWHhoZaQECA+fn5WYECBeyZZ56xX3/91czMTp48ad26dbPChQtbunTpLCAgwCpWrGhffvllnPrzp59+ssqVK1uaNGnM39/fGjVqZDt27Ij1O8blkWFu+/btsy5duliePHksderUliVLFmvcuLH9/PPPt/zuce2X69ev22uvvWbZs2e3NGnSWK1atWznzp2WOXNme/7552PUffMjw25+5JdZzEcw3cqt3n/hwgXr1auX5cyZ01KnTm2FChWyd9991+PxcmY3HhnWrVu3O37OnT4vuth+P2fOnLEOHTpYlixZLH369BYaGmq7du2KsV7H1kdmZl988YWVLl3afH19LVOmTNa2bVv7559/PNpEf6TTzWLrz7Vr11rZsmXNx8cn1seHHT161FKmTGkPPfTQbb/vzTZv3myhoaGW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kp04he5x48bFeYE9evS462IAAAAAAEhO4hS6R48eHaeFuVwuQjcAAAAAAP9fnEL3zfdxAwAAAACAO4v3c7qXL1/ujToAAAAAAEh24h26H3vsMRUoUEBvvvmmDh065I2aAAAAAABIFuIdug8fPqzu3bvrq6++Uv78+RUaGqovv/xSERER3qgPAAAAAIAkK96hO0uWLOrVq5e2bNmi9evX66GHHtL//vc/5cyZUz169NDWrVu9UScAAAAAAElOvEN3dGXKlNGAAQPUvXt3Xbx4UdOnT1fZsmVVtWpVbd++PaFqBAAAAAAgSbqr0H3t2jV99dVXql+/vvLmzatFixZp/PjxOnbsmPbu3au8efPq8ccfT+haAQAAAABIUuL0yLDoXnjhBX322WcyM7Vr104jRoxQsWLFnPnp0qXTe++9p5w5cyZooQAAAAAAJDXxDt07duzQ+++/r+bNm8vX1zfWNlmyZOHRYgAAAACA/7x4h+6lS5feeaGpUql69ep3VRAAAAAAAMlFvO/pnjlzpn744Qfndb9+/ZQxY0Y98sgjOnDgQIIWBwAAAABAUhbv0P32228rTZo0kqR169ZpwoQJGjFihPMoMQAAAAAAcEO8Ly8/dOiQChYsKEn67rvv1KJFCz377LOqXLmyatSokdD1AQAAAACQZMX7THf69Ol16tQpSdLixYtVp04dSZKfn5+uXLmSsNUBAAAAAJCExftMd506ddS5c2eVLl1af/75p+rXry9J2r59u/LmzZvgBQIAAAAAkFTF+0z3hAkTFBISohMnTujrr79W5syZJUmbNm1SmzZtErxAAAAAAACSqnif6c6YMaPGjx8fY/rrr7+uP/74I0GKAgAAAAAgOYj3me6bXbhwQVOmTFHFihVVsmTJhKgJAAAAAIBk4a5D96pVq9S+fXvlyJFD7733nmrWrKlffvklIWsDAAAAACBJi9fl5WFhYZoxY4amTZum8+fP64knnlB4eLi+++47BQcHe6tGAAAAAACSpDif6W7UqJEefvhhbdu2TWPGjNGRI0f0/vvve7M2AAAAAACStDif6V6wYIF69Oihrl27qlChQt6sCQAAAACAZCHOZ7pXr16tCxcuqGzZsqpYsaLGjx+vkydPerM2AAAAAACStDiH7kqVKunDDz/U0aNH9dxzz+nzzz9Xzpw5FRUVpSVLlujChQverBMA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2urXr68TJ05o3bp1zrZ4586deuedd7R7925Vr15dw4cPT+Qq7z3+KiUj7j+EK1eu1IYNG3T16lX16tVL6dOnT+zSko3oG+oDBw7owoULKlq0qKT/OzrKzsi/5+7HS5cuycfHRy6Xi51oL3D3819//aXz58/Lx8dHhQoVko+PT2KXlqRF3w6YmbPN2LZtm4YPH67UqVPr9ddfZ5uRgNz9+NNPP2nGjBm6fPmy8ufPr/feey+xS0tW3P28evVqbdy4UYcOHVKXLl2UL18+pUmTJrHLSzbc/fz777/r5MmTSpcunSpUqJDYZSUb7m3yK6+8omnTpumNN95Q3rx51bZtWzVs2FALFy5UQEBAIleZNO3atUu7d+/WjBkzlCpVKi1fvlylSpVSkSJFNGLECE2ZMkVff/21fH19/3O3XXG6LhlxuVyaN2+eQkND9f3332v8+PEqU6aMNmzYkNilJQvRA/egQYPUsGFDPfLII3r00Uf18ccf6+rVq1yWlADcOxs//vijnn76aZUrV079+/fXihUrEru0ZMXdz19//bVq1KihVq1aqXjx4mrXrp3mz5+f2OUlaS6XS8ePH9e+ffvkcrn0xRdfaMmSJerWrZvGjh2r999/XwMHDnTass3491wul7777ju1bNlSadOmVcWKFfXRRx+pVatWOnLkSGKXlyy4txnffvutGjdurEWLFumXX35R7dq19dFHH+nkyZOJXWKy4e7nRx55RM8995wqVaqk1157TRcuXEjs0pKNv/76SwsWLNCsWbP07LPP6vr167p+/brat2/vEbjZPsdP6tSplTlzZi1btkzPPPOM+vbtq+vXr8vMlC1bNnXr1k2NGjXSqlWrtGTJksQu994yJHlRUVFmZnbx4kXr3LmzffTRR3bt2jU7d+6chYaG2oMPPmirV69O5CqTjyFDhlj27Nntu+++s5MnT1q1atUsODjY3nvvPbt8+bKZ/d/vBHdn7ty5liZNGhs0aJCNHDnSmjZtasWKFbMff/wxsUtLVtauXWsZMmSwiRMn2l9//WWLFy+2unXrWt26de2HH35I7PKSrFOnTlnRokWtb9++NmHCBHO5XDZ9+nQzMzt9+rSNGTPGHnjgAXv11Ved97DNiJ/jx497vP7999/toYcesgkTJpiZ2dGjRy1HjhyWMmVKq1mzph05ciQxykx21qxZYzly5HDW56tXr1qKFCksb968NnLkSDt16lQiV5i0ubcDx48ft7Jly9r06dPtzz//tNmzZ1uqVKmse/fudvbs2USuMmmKjIz0eL1u3TrLmTOnmZnNnz/f0qdPb5MnTzYzs/Pnz9uUKVPueY3JxQcffGDZs2c3Pz8/W7BggZndWLfdv4NDhw5ZtWrVrHPnzolZ5j1H6E4mfv75ZwsODrZatWrZL7/84jHPHbzXrFmTSNUlXTf32aZNm6xcuXK2aNEiMzNbvny5pUuXzkJCQqxQoUI2ZswYgnc8nTt3zuP1jh07rHjx4s4fvDNnzlhgYKAVLlzYChcuTPBOQO+8845Vr17dY9qGDRusZs2a1q5dOzNjPY6PDRs2OP+ePXu2BQYGmsvlspEjR3q0ix68Bw0adK/LTPLeffdd69mzp4WHhzvr508//eQcxDh06JAFBQXZ888/b7/99ps98MAD9sQTT9ihQ4cSs+wk7/r16zZjxgzr16+fmZn99ddfli9fPuvevbu98MIL5ufnZ2PGjLGwsLBErjRpW7hwob3yyivWsWNHu3DhgjN9/vz5ljp1aoL3v/Trr7+a2Y19j0cffdRefvllS58+vUfI3rp1q4WGhtq6desSq8wkyR2qhw0bZi6Xy/Lnz29vvvmmHTx4MEab9evXm7+/v61YsSJRak0MhO4kLPrO8IkTJ6xMmTLmcrmcQBj9qF6DBg3Mz88vRiDHrQ0fPtwqV67scXTuyJEjNnPmTLt69aotX77csmbNalOnTjUzs9KlS1uRIkVs0KBBduXKlcQsPcl44403rE6dOnb9+nVn2l9//WWdO3e2s2fP2sGDB61gwYL2/PPP29q1ay04ONgefvhh+/bbbxOv6GRkxIgRVrZsWbt06ZKZ/d82Y+7cuZYyZUr766+/ErO8JGXq1Kn22GOP2cmTJ83sRvALCAiwjBkz2iuvvGJ79+71aH/69Gl7//33zeVy2ZtvvpkYJSdZU6dOtV27dpnZjSu8zMwiIiJsy5YtFhUVZS1atLC2bdtaRESEXb582UJCQszlclmDBg08tjWIv507d9qOHTvs8uXL9uijj1qnTp3M7EYgDwwMtCxZstiECRNinFVE3E2cONFcLpflypXLuULD3Z/z58+3tGnT2jPPPBPjgDXu7KeffrKHH37Ydu3aZefOnbMnnnjCfH19rWfPnk6bK1euWP369a1Ro0asx3F088H5f/75xw4ePGgjRoywhx9+2F577TX7559/nLbu7XDnzp1t4sSJsS4jOSJ0J3FLly61d99918xuXI5Uvnx5Cw4Odnbwoq/ELVq0sD///DNR6kyKDh06ZNeuXTMzc/rt+vXrdvr0aYuKirLWrVvbSy+95Gw8nnzyScufP7917979P7HxSAj79++3P/74w8xuXKbo5r50tEuXLta6dWsnFD7xxBOWPXt2e+SRR+z8+fP0czy4+2rnzp3OJaDz5883l8tl3333nUfbTZs2WZEiRQjd8XD48GH7+++/zcycHeXDhw/bJ598Yjlz5rTevXvHCN4RERE2ceJEJ0AiflavXm3PPfecsw0xu3FZaMWKFW3mzJnOtP/973+2fPly1ud4cm8z3H8Ho9u9e7cVL17cfvrpJzMz27dvn7Vu3dpeeOEF27Nnzz2tMzn6+OOPLUWKFDZ06FAn+Ll/H998841lzZqVKwruwi+//GJZs2a1uXPnmtmNfbsyZcpYlSpV7IUXXrD33nvPqlevbsWKFbOIiAgzi3lZOjxF759z587Z0aNHPeYPGTLEChcu7BG83caNG2fdu3e/J3XeDwjdSdi1a9fs3XfftRIlStjGjRvNzOzYsWNWunRpK168uLODQTD5dxYtWmQul8vZSJvdCN+1a9e2Hj16ONPatm1rixYtivEHEjFt3rzZzp8/77xevny5PfLIIx6Xf169etUqVqxoAwcONLMbG/Znn33Wxo0bZydOnLjnNSdl7nXx22+/tXz58tmbb77pnCHs2bOnpUuXzr7++ms7efKkXbt2zfr162eFCxemn+Mo+k7Hpk2brFKlSjZt2jRn2pQpUyxnzpzWt29fJ5AMGjTIFi9efM9rTU4mTJhghQoVsu7du9vu3bvN7MZZqnz58lmrVq3st99+sz59+liePHkIKPHk3mYsWLDAmjVrZs8884xzv6uZ2apVqyx79uz2+eef29GjR23IkCFWt25drvKKJ3c/h4eHW3h4uMe8iRMnWooUKeydd95x2kUfwwe3FhkZ6bEvFn1/7MUXX7RixYo54XDXrl3Wr18/K1eunDVs2NC6devmHGiK7YAT/k/0fh06dKjVqFHDMmfObB07drQZM2Y4815//XXnStD9+/d7LGPLli33rN7ERuhOYm4Ocr/++qtVr17dhg4d6kxzB+8yZcpwZvsuRO/jZcuW2YoVK+zZZ5+1zJkz2/z5883sRiB8+umnrWLFitaxY0erVq2aFS1a1DnrzZHR2EVFRdmKFSvM5XLZhAkTnDPYf//9twUGBlr16tXt8OHDZnbjj12HDh2sWrVq9sknn1ifPn0sd+7c3Jd5lxYtWmR+fn42ZcoU54ys2Y2dt969e1uqVKns4YcftnLlylnmzJlt8+bNiVht0vXPP/9YnTp17NFHH40RvPPly2dNmjSxVq1amcvlcg6W4u5NmDDBSpcubV27drUdO3aY2Y3tdqZMmSxfvnyWO3du1uW79NNPP5mPj4+1a9fO6tevb5kzZ7bevXs781u2bGn+/v5WqFAhy5Ili23atCkRq0163PsaCxcutKZNm1q1atWsY8eOFhYW5sybMGGCpUiRwkaMGMGB/Lt08+B+y5Yts/Lly9vSpUs9pt986wmBO+4GDRpkmTJlssmTJ9uYMWOsYcOGVrZsWedKXDOzt956yx544IFbDlD3X1i/Cd1J0JIlS6x3797OBmLmzJnm4+PjDA5hduPy3KCgIKtcubJziQzuLHpYHjBggBUoUMD2799ve/bssWeffdYCAgLs+++/N7MbG/KOHTta8+bNrU2bNlyKFA/9+/c3Pz8/mzRpknPGe//+/VagQAGrXLmyE7wXLVpkjRs3tly5clmxYsXYqbtL169ft6efftq6devmMT36H7mlS5fa1KlT7YMPPvAI5Yi/Q4cOWZMmTaxatWoewfuzzz5zthm///57IlaY9Lh3gP/66y/nvmK3CRMmWKlSpaxr167OgeaTJ0/a5s2b7dixY4lSb1IU/W/X/v377euvv7Zx48aZ2Y0xCKZPn24+Pj4el4N+9tln9vXXX7PNuEvfffed+fv7W/fu3e3jjz+2Bx980Bo0aGAbN250ts+TJk0yl8tlY8aMSeRq73/t2rXzGCNj9uzZ5nK5bODAgbZw4UJnev369a1WrVrO65sD338hACaUgwcPWtmyZe3rr792pv3111/Wr1+/GAc3Zs6c+Z8eV4PQnYRERUVZeHi4FSpUyFwul9WuXdu+/fZbO3PmjPXp08cqVKjgcQndiRMn+EN4l44ePWodOnRwBqUzu7ERcQdv9z2wN18OxpHR24t+AOjVV181X19fmzp1qjMS6759+6xAgQIWEhLi7CyfPn3aDh06xKXOcdSvX78Y90hdvnzZihUr5lyqf/MOBQPy3B13Px48eNA2b95sR48edUYbPnDgQKzB+8qVKzG2G4jdzJkz7cMPP3Ref/7555Y7d24LDAy0ggUL2uOPP+4ExfHjx1vp0qWte/fuHNCIpxEjRniMkv3333+bv7+/BQYGelwievnyZSd4v/jii4lQafKyc+dOCw4OtvHjx5vZjfEIHnzwQfPz87PSpUvbr7/+6qzfU6dO9TjQhJguXrxon3zyicd+hvs2zCZNmliWLFmsVatWtmTJEvvll18sJCTEeZwV7t7x48ftwQcf9Pg7Z3Zjf+7hhx+O9WDRfzV4E7qTgJt3kFesWGHVq1e3atWqWfv27e2JJ56wQYMGWdu2bW3ixImcaf2XZsyYYb6+vlakSJEY95r89ddf9txzz1nmzJntyy+/9JjHkdE7c/fRypUr7fvvvzd/f3/LnDmzffDBB85Onzt4V61aNcagG7i9qKgomzdvXqz3SD311FPWuHFjZ3Rt9+9ix44d9tprr/EImniKPqjRww8/7FyN0adPH9u3b5+Z/V/wrlWrlk2aNCkRq016jh8/bg0bNrSKFSva559/bkeOHLGgoCCbNGmSLVu2zAng1apVc94zYcIEy5cvn7300ktc4RVHR48etYoVK3oM5nf48GEbOnSoZcqUyXk8mNvly5dt5syZ5nK5bMCAAfe63CQp+r5B9LCxbds2Gzp0qF27ds0OHz5s+fPntxdeeMGOHTtmOXLksHr16tnatWvZt7gLkyZNch57aXbjtsv169db/fr17ZFHHrHs2bNb5syZbciQIYlYZfJw4sQJq1ixovXt29euXr3qsb42adLEecIBCN1Jxs8//2x//PGHXbx40a5evWoDBgywd955x5YuXWojRowwPz8/S5MmjRUrVszOnDmT2OUmaadOnbJ69eqZy+Vy7uGO7u+//7YnnnjC6tatmwjVJX3z5s2zlClT2vDhw+3111+3J5980lKnTm2TJk1ygvf+/fvtgQcesMcee+w/e0T031q0aJHHH7uxY8dawYIFbfTo0R73uL322mtWtGhRBpq6g+gHM93/XrBggfn7+9vo0aPt0qVL9tprr1lgYKC1adPGGan84MGDVrNmTWvQoAEHNuJpy5Yt9tRTT1nNmjWtV69ezmPA3Hbu3GkPPvigPfXUU860adOmcYVXPLmfHPHzzz87t/scOXLE3nrrLfPz87Phw4d7tL906ZLNnj3bdu7cec9rTaqiX6m1aNEimzNnjkVGRjpnr9u1a2dt2rRxxjkJDQ01l8tl1atX93iyB2J38/b57bfftiJFitjzzz/v0e7ixYu2e/du69u3rxUqVMgeeOABbltLANOnTzeXy2Xvv/++sx938eJFK1++vL3xxhuJXN39g9CdBERFRVnVqlUtX7589vLLL9uhQ4dsw4YNVqJECWeAmJUrV1rNmjUtU6ZMDDQVD7e6KuDcuXNWpUoVCwoKsu3bt8eYf/jwYa4ouAtXr1612rVr2//+9z+P6X379rXUqVPbBx984ASTAwcO8OiZeLj5bMjXX39tLpfLnn32WWdajx49rGjRos7voEWLFubv72+//fbbPa42adq3b5+zfh47dswaNGjg7FAcP37c8ubNa1WqVLESJUpYmzZtnDPehw4dYrt8l7Zs2WJt27a1oKAgq1SpkjPdfSvPtGnTLDg42Olr3J0LFy5Y0aJFLSgoyAneYWFh9vbbb5u/v3+M4I24O3v2rGXLls1ee+01+/7772M8pvHatWtWvXp1j0GnevXqZRs2bOAxd3EQ/W/f7Nmz7Z9//rEzZ87YmDFjrHjx4h7BO3rbX3/91erWrfufek50QoveZ6NGjbKUKVNakyZNrG3btlajRg0rWrQot11GQ+hOQkaNGmUNGjSwPHny2OrVq+3555+30qVLO2e2Dx8+zH2v8RA9NH/xxRc2aNAge+utt5yB0i5cuGCPPPKIFSpU6Jb3UhG84y4qKsquXbtmlStXtsGDB5uZ5z3eTZs2tZw5c3ocKUX8bd261Y4cOWKRkZE2d+5cS58+vXXo0MGZP336dOvRo4dVq1bNunbtGutBJcQUERFhNWvWtBw5cjjb3Dlz5tjvv/9uJ06csCJFijgHOHr27Gnp06e3Bg0axHg2N+Im+rZ169at1qpVK0ubNq3HY6vMzL7//nvLlSuXHThw4F6XmOxs2bLFSpcubSVKlHCC99GjR+3tt9+2zJkzO9ttxE9ERITNmTPHfH19zdfX1z7//HMz+791PCIiwkqWLGn16tWzH3/80V566SWewx0H0QcPvn79um3evNkyZ87sDMR69uxZGz16dIzgHf3KgS5duljNmjXvXdHJ3Pfff289evSwli1bWp8+fXj02k0I3fch95GjP//807Zu3WqrVq1y5u3bt89eeeUVS58+vbVu3dpy5sxpI0eO5P61f6Fv37724IMPWps2bax169YWEBBg7733npmZnTlzxqpUqWKFCxe2bdu2JXKlyUOHDh2scOHCzvNc3evuSy+9ZAEBARYYGMgtEnchKirK/v77b8uSJYtz5vr69ev27bffxgjeZjf+CHJkP35+//13K1++vAUHB9vp06ed6ePGjbO6des698tPnTrVihUrZk8++STjEsSTe508ffq0RUREODtr27Zts9atW1vFihWd++MvXrxoffv25Znyd8Ed+K5cuWKXL192pm/fvt2KFSsWI3gPHDjQ8uTJYydPnmS7cRe2bt1qLpfLXC6Xvf7668509/rtvlWiQIECVqBAAR5zdwfvvPOOFStWzOMWwN9++80KFChg586dc9ZRd/AuUaKEx9M73Ot/79697dFHH/X4P4D4u902gcD9fwjd9xn3ivvVV19Znjx5LCgoyNKnT2+PPfaY/frrrx7PdXziiSfM5XJZlSpV2GDcpblz51ru3Llt3bp1ZnZjtFxfX1/76KOPnDbnzp2zQoUK2ZNPPplIVSZN7nX18OHDdvDgQSdk//HHH1amTBlr1KiRxxHnl156yZYuXcrO812I/gevUKFCHo/uiIyMdIJ39EvNEXfu/o2MjLSdO3daSEiIlS1b1gneAwcOtOLFi9vx48fN7MaBvLfeessjmCPuvvvuOytVqpRVr17dnnvuOefKl02bNlnr1q3N19fXSpcuba1bt7bChQt7nPHCra1du9ZjnZw7d641adLEHnnkEZs+fbpz60RswfvYsWPOQSXEjXu7cerUKbt48aJt3brVPv/8c0udOrW98sorTjt3KAkPD7eDBw/yNzAOli5das2aNbNatWo5Vyfu2LHDypQp4xzId/er+1LzwMBA5xL+qKgo+/PPP61kyZIc4Ehg0fdHOEDnidB9H1qzZo2lT5/epk2bZlu2bLEtW7ZYkSJFrHLlyrZx40anXVhYmH377bfOc0kRf6NGjbLGjRub2Y17YDNkyGAffPCBmd14fMeGDRvM7MYZFQb0ir+vvvrKihYtalmyZLG2bds6j+f49ttvrXTp0lagQAHr0aOHNW/e3Pz8/DxG0MWduf+gRT+SXLp0aRs6dKhHu+vXr9vcuXPN5XLxqJ84iH4W0C361UQvvfSSuVwuK1GihJ0+fdq+++47K1u2rIWGhtrjjz9uadOmZV2+S1u3brXMmTPb0KFDrXv37lapUiUrV66cE/62bt1qbdu2tWzZstmQIUMIKHEQFRVlGzduNJfLZW+++aZFRETYzz//bOnTp7fnnnvOnnrqKUuRIoX17NnTGXtg+/btVqpUKcudOze3+9wF97b5+++/t2bNmtnChQvt2rVrFh4ebtOnT7dUqVI5j3A0M/vggw9szpw5iVVukuLePq9atcqaNm1q1atXtx9//NHWr19vpUqVivUk1MWLF23OnDkx9uN4XGbsCM7ekUq472zYsEGlS5fW008/rZQpU8rlcmnt2rWqWLGi3nrrLX377beSpGzZsqlp06aJW2wSEhUVpRQpUnhMy5Ahg3LmzKlvvvlG7du313vvvadnn31WkrR06VKtX79e+fPnV+bMmSVJkZGRSpky5T2vPSlx9/OOHTvUq1cv9erVS/7+/vr00081fPhwXbp0SS1atFCxYsU0atQo/f333/Lz89OGDRv08MMPJ3b5SYrL5dLSpUs1fPhwlStXTg8++KBKliypEydO6MSJE8qaNaskKWXKlGrcuLHmzZunAgUKJHLV978UKVLo8OHD6tWrl7p27aqaNWsqderUkqQRI0ZoxowZ+vDDDzVp0iTVrl1by5Yt04kTJ7R8+XJduXJF69evZ12OBzOTy+WSJEVERKhr16567bXXdP36df3888/q37+/qlevrpUrV6pEiRLq0aOH0qVLp06dOilLliyJXP39zd235cqV09ixY9WzZ0+lSZNGLpdLb7zxhnr27ClJatSokbp06aKoqCj17dtXwcHB+vjjj/X888/r+PHjSp8+feJ+kSTG5XLp22+/Vbt27fTyyy+rUKFCSpXqxi53+/btFRUVpa5du2rPnj3KmDGjZs6cqc2bNydy1fc/M3P243LmzKn+/ftr+PDhGjt2rIKCgnTx4kUNHDhQfn5+SpEihVwul06cOKG2bduqZcuWkm7sx7nnZciQITG/zn3p5n3l69evO3//pBu/g+i/B8RDokZ+eHAfTerXr5+VKlXKme4+ard69WoLCAiwbdu2ceQpnqL3l/tSJDOz+fPnW9q0ac3lcnk8R/fixYsWGhpq3bp1o6/vILazgn/88Ye9/vrr9vLLLzvTdu7caS1atLBq1arZZ5995vF+riKIP/d6OWbMGOvZs6c99thjVrRoUcuV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72f69OmcOnWK3Llz8+qrr9KjRw88PT2tXZqISJbxsAnRtm7dykcffUR8fDwjR47E29ubmJgYunXrRmxsLHZ2dpQsWZLly5djb29vmehSrE+hW0RERDJEP+RERDJP2hUiLl++TM6cOcmVKxeQErznzJnDnTt3GD58OL6+vgBcvXoVW1tb8ubNi8lkIikpSS3dTxGFbhEREcmQtC0wWp5GRCRzjB8/njVr1lCgQAFeeeUVpk+fDqRMlDZ37lwSEhIYOnSoJXin0nX56aPZy0VERCRD0v6Y0w87EZEn79NPP2XJkiUMGTKESpUqsXnzZt566y0AfH19GTBgAI6OjgQGBnLgwIF0++q6/PRRnwMRERERERErStulHFJaqydOnEi3bt24e/cuX331FcOGDaNp06Zs3LgRHx8fEhIS2L17N15eXlasXB6HupeLiIiIiIhYSdru4CEhIdy6dYuwsDD8/PwYPHgwAAkJCZbgXb58edavX5/uGJpr4+mm0C0iIiIiImIFaVu4R48eTXBwMKVLl+bixYt4eHiwc+dO7O3tAbh37x5fffUVnTp1om/fvkybNk3jt58R6l4uIiIiIiJiBamBOyYmhsjISH744Qfc3Nw4fPgwXbp04c0332TLli2YTCayZ89Ow4YN2bx5M7Vq1QI0fvtZoYnURERERERErGTu3LnUqFGDa9eukT9/fpydnalbty6fffYZkZGRNGzY0LKtg4MDderUwdbWFrPZbMWqJSMUukVERERERKzEx8cHJycnDh48yNWrV4GUFuyaNWuyevVqoqKiHjpZmsZwPzsUukVERERERP4FycnJDzxXqlQp1q1bh4uLC/369SM2NhZICd41atQgJCSEYsWKPXRfeTZoIjUREREREZFMlnbStOjoaJKSknBzcyNXrlwAnD59mgYNGlC8eHE+++wzXFxc/vQY8uzQX0xERERERCQTGYZhCcvvvvsub775Jo0bN6ZkyZJs3LiR+Ph4PDw82LZtGxcuXKBDhw5cvHjxgeMocD+b9FcTERERERHJJGaz2TLL+IQJE1i4cCEzZszg2LFjVKlShbfffpvVq1dz+/ZtPDw8CA8PZ9++fUyePNnKlcuToiXDREREREREnrCtW7fi4+NjmfDs8OHDfPPNNyxZsoSGDRvy5ZdfsmfPHipWrMh//vMfAFq3bk2JEiWIjo6mUKFC1ixfniC1dIuIiIiIiDxBc+fOpV+/fixcuNDynKOjI507d8bHx4dvv/2WXr16MXnyZHbu3EndunUZP348y5Yt4+7du7i6umpZsCxEoVtEREREROQJ8vb2pk6dOoSGhrJgwQIASpYsiZ+fHzY2NixatIhmzZrRu3dvzGYzrq6uZMuWjc8//xwHBwfLcbQsWNag0C0iIiIiIvKEGIZB2bJlGTFiBKVKlWLZsmV8/PHHABQsWJDbt29z+vRpChQogK2tLba2tty9e5ctW7awc+dOTCYTWmAqa9GYbhERERERkScg7ZJenp6eDB8+nGnTphEaGoqNjQ29e/fG0dGRl156idmzZxMXF8fBgwctk6iZTCYtC5YFaZ1uERERERGRfyhtWF63bh1eXl4UK1aM6OhopkyZwokTJ+jUqRN9+/YFoH///ly4cAEnJycWLVqEvb09ZrNZXcqzIIVuERERERGRf8AwDMuyYKNGjSI0NJRhw4bRu3dvcuTIQVRUlCV4d+nSxTJbeUJCgmUMd1JSEnZ26oicFSl0i4iIiIiIPAETJ05kzpw5bNq0ibJly5I7d25LIP/ll1947733iIqKolmzZgwdOtSyX9rQLlmPBguIiIiIiIj8DQkJCUBK1/KrV6/y7bffEhwcTPXq1YmPj2fXrl10796dkJAQ8uXLx/jx4ylYsCCnTp1KN1maAnfWpv4LIiIiIiIiGfTNN9/wySefMGPGDIoUKUJycjKRkZFERUXx3XffMX/+fH755RcMw2DDhg3cvHmTQYMGERQUhJubm2WWcgXurE8t3SIiIiIiIhl05MgRoqKiGDduHBcvXqRgwYKMHTuWoKAgmjZtSrFixZg0aRL79++nYcOGREREAFC8eHFsbGxITk5W4H5OaEy3iIiIiIjIY5gyZQqNGzemYsWKAMyfP58VK1bg4eHBBx98QOHChTl9+jRJSUmULl0aSOl67uPjQ82aNXnvvfesWb5YiVq6RURERERE/sKlS5fYvHkz9+/ftzzXt29f2rVrx6lTpxg5ciS//vorHh4elC5dmlu3brF79278/Py4fPky48ePt2L1Yk0K3SIiIiIiIn/B1dWVqlWrMmbMGG7dumV5vn///rRv355Tp04xevRoYmJiANi7dy+TJ08mMTGRQ4cOYWdnh9lstlb5YkUK3SIiIiIiIn8idURuixYtSEpKYs+ePUBK13FICd7t2rXj9OnTjBo1isuXL9OgQQMmTJjA5s2bsbe3JykpCVtbW6udg1iPxnSLiIiIiIg8BsMwaNy4MfHx8WzZsoVcuXKRlJSEnV3KolDz5s1j1apVODs7s2TJEvLnzw+khHMbG7V3Pq/0lxcREREREfkLqbONL1++nLNnz9KlSxcA7OzsLC3h/fr1o0mTJri6uuLs7GzZV4H7+aaWbhERERERkceQ2mK9e/dumjdvziuvvMJHH31E4cKF03UdT91OLdwCCt0iIiIiIiIZFhERQbt27XB2dqZbt2506NCBPHnyWF5X4JZUCt0iIiIiIiL/zzAMTCbTY22blJREQEAAZ86c4dixYwwZMgRvb2/Kly+fyVXKs0ShW0REREREhAdbp9M+/mMYT51AzTAMbt26xerVq7l37x5VqlShRo0a/3rt8vRS6BYREREREUlj1qxZ7Nmzhzx58tC+fXu8vb0tk6WlDd5/DOIZaSWX54cGGYiIiIiIyHMtdb1tgAkTJjB58mQcHR05e/YszZo1Y9WqVZYwnbbN8o8BW4FbHsbO2gWIiIiIiIhYU2oX8lOnTpEtWza++OILatWqxaVLl5g1axbt27cHoG3bthiGoRZtyRCFbhERERERee5t2rSJpk2b4u7uTpMmTQBwdXUlMDAQk8mULniLZIS6l4uIiIiIyHPvxRdfpE+fPly8eJFz584BKV3JCxQoQGBgIIGBgbRv355t27ZZuVJ51mgiNRERERERea48ag3tEydOMHnyZNatW8cXX3yBt7e35bUrV66wZs0aevfujZ2dOgzL41PoFhERERGR50bawL1nzx7MZjOGYfDaa68BKcF76tSprF+/ns8//5z69es/crkwkceh0C0iIiIiIs+FtOF59OjRrFmzhsTEROzs7GjcuDHBwcFASvCeNm0aX375JUuXLqVx48bWLFuecRrTLSIiIiIiz4XUwD158mQWLVpESEgIR44coU2bNsyZM4devXoBUKZMGQIDA3n11VeZM2eONUuWLEB9IkREREREJEtL26X89OnT7Nq1i6VLl1KrVi02bdrEvHnz6NOnD8uXL8fGxoYFCxZQunRpZs+eTdGiRa1cvTzrFLpFRERERCTLMgzDErh3795NrVq1aN68OTVr1uT777/n7bff5oMPPuDtt9/GMAwWLlzI1atX+fzzzylWrBjw6InXRB6HvjkiIiIiIpIlpR3DPW7cOPz9/YmNjaVHjx44OTnx5ZdfUq9ePbp06QJA0aJFeeutt0hISCA5OdlyHAVu+SfU0i0iIiIiIllO2sB98OBBjh49yrJly3BxcQFSWq+PHDkCQM6cObl79y4RERH4+fnRrVs3yzYK3PJPafZyERERERHJskJDQ/n000+5e/cuGzduJG/evJYwHRYWRocOHXjllVe4efMmZrOZiIgI7OzsHlgmTOTv0m0bERERERHJMrZv3877779veWw2mzl79iyHDx/m8OHDwP+6i/v4+LB69Wo8PDzw9fW1BG6z2azALU+MWrpFRERERCRLuHfvHgMHDmTPnj106tSJ4cOHA7B+/XrGjBlD6dKlGTlyJF5eXo88RlJSEnZ2GoUrT45aukVEREREJEvInj0748ePp379+oSFhTF58mQA/Pz8GD16NOfOnSM4OJiIiAjLPmknTAMUuOWJU0u3iIiIiIhkKbGxsUyaNIkDBw7w1ltvMWrUKABWrlzJrFmzKF++PH369KFGjRpWrlSeB2rpFhERERGRLMXFxYXRo0dTrVo1NmzYYGnxbt++PQEBAezYsYPw8HArVynPC7V0i4iIiIhIlpS2xdvPz4+RI0cCEB4eTv369bG1tbVyhfI8UOgWEREREZEsKzY2lsmTJ3Po0CHq1KnDlClTLK+ZzWYFb8l06l4uIiIiIiJZlouLC6NGjcLDw4OrV6+Sts1RgVv+DWrpFhERERGRLC8uLg4nJydsbGwwDEPrcMu/RqFbRERERESeG8nJydjYqMOv/HsUukVEREREREQyiW7xiIiIiIiIiGQShW4RERERERGRTKLQLSIiIiIiIpJJFLpFREREREREMolCt4iIiIiIiEgmUegWERERERERySQK3SIiIvKveffddylUqBAmk4kvvvgiU96ja9euNGvWLEP7uLu7ExQUlCn1iIjI802hW0REJBPFxsYyYMAASpQoQfbs2XFzc6Np06Zs3779X68lM4Pu4zh+/DgTJkxgwYIFxMTE0KhRo0duu2zZMqpVq0bOnDnJnTs3devW5csvv3ys9wkODmbp0qUZqu3AgQP07t07Q/uIiIg8DoVuERGRTHL27Fm8vLz45ptvmD59OkePHmXLli28/vrr9OvXz9rlPdT9+/cz7dinT58GwM/PDxcXF7Jnz/7Q7YYOHUqfPn1o27YtR44cYf/+/dSuXRs/Pz/mzp37yOObzWaSk5PJmzcvTk5OGaqtYMGC5MyZM0P7iIiIPA6FbhERkUzSt29fTCYT+/fvp2XLlpQqVYry5csTEBDA3r17LdudP38ePz8/cuXKRZ48eWjTpg2//fab5fWHdZcePHgw9erVszyuV68eAwcOZPjw4eTLlw8XFxfeffddy+vu7u4ANG/eHJPJZHn87rvvUqlSJRYtWsSLL76Ig4MDoaGh5M+fn3v37qV7z2bNmtG5c+dHnu/Ro0epX78+OXLkIH/+/PTu3Ztbt25Z3qdp06YA2NjYYDKZHnqMvXv3MnPmTKZPn87QoUMpWbIkZcuWZdKkSQwePJiAgAAuXLgAwNKlS3FycmLDhg2UK1eO7Nmzc/78+Qc+r/j4eDp27IijoyOFCxdm1qxZ1KtXj8GDB6f7fNJ2LzeZTCxatIjmzZuTM2dOPD092bBhwyPPXURE5FEUukVERDJBXFwcW7ZsoV+/fjg6Oj7wempLbHJyMn5+fsTFxfHtt98SHh7OmTNnaNu2bYbfc9myZTg6OrJv3z6mTZvGxIkTCQ8PB1K6TwOEhIQQExNjeQxw6tQp1q5dS1hYGD/99BOtW7fGbDanC5mXL19m06ZNdO/e/aHvffv2bXx9fXF2dubAgQOsWbOGbdu20b9/fyCl9TokJASAmJgYYmJiHnqclStXkitXLvr06fPAa++88w6JiYmsXbvW8tydO3eYOnUqixYt4tixY7zwwgsP7BcQEMDu3bvZsGED4eHh7Nq1i4iIiD/9LAEmTJhAmzZtOHLkCI0bN6Zjx47ExcX95X4iIiJp2Vm7ABERkazo1KlTGIZBmTJl/nS77du3c/ToUX755Rfc3NwACA0NpXz58hw4cIBq1ao99nu+/PLLjB8/HgBPT0/mzp3L9u3beeONNyhYsCCQEvZdXFzS7Xf//n1CQ0Mt2wB06NCBkJAQWrduDcB///tfihUrlq51Pa0VK1aQkJBAaGio5SbD3Llzadq0KVOnTqVQoUKWGw1/fP+0oqKi8PDwIFu2bA+85urqSp48eYiKirI8l5iYyPz586lYseJDjxcfH8+yZctYsWIF3t7eQMqNB1dX10fWkKpr1660b98egMmTJzN79mz2799Pw4YN/3JfERGRVGrpFhERyQSGYTzWdsePH8fNzc0SuAHKlSuHk5MTx48fz9B7vvzyy+keFy5cmMuXL//lfsWLF08XuAF69erF1q1buXjxIpDSlbtr166P7BZ+/PhxKlasmK5Vv1atWiQnJ3Py5MkMncfjfnYA2bJle+C80zpz5gyJiYlUr17d8lzevHkpXbr0Xx477XEdHR3JkyfPY32eIiIiaSl0i4iIZAJPT09MJhMnTpz4x8eysbF5IIgmJiY+sJ29vX26xyaTieTk5L88/sO6v1euXJmKFSsSGhrKoUOHOHbsGF27ds1Y4X9DqVKlOHPmzEMndLt06RI3b96kVKlSludy5MjxyBsB/9Tf/TxFRETSUugWERHJBPny5cPX15d58+Zx+/btB16/fv06AGXLluXChQuWycEAIiMjuX79OuXKlQNSZtb+4xjon376KcM12dvbYzabH3v7nj17snTpUkJCQmjQoEG61vg/Klu2LIcPH053rrt378bGxuaxWpVTtWvXjlu3brFgwYIHXpsxYwb29va0bNnysY9XokQJ7O3t041hv3HjRrou6iIiIplJoVtERCSTzJs3D7PZTPXq1Vm7di3R0dEcP36c2bNnU7NmTQAaNGjASy+9RMeOHYmIiGD//v106dKFunXrUrVqVQDq16/PwYMHCQ0NJTo6mvHjx/Pzzz9nuB53d3e2b99ObGws165d+8vtO3TowK+//sonn3zyyAnUUnXs2BEHBwf8/f35+eef2bFjBwMGDKBz584UKlTosWusWbMmgwYNYtiwYcycOZPTp09z4sQJxowZQ3BwMDNnzvzT8P9HuXPnxt/fn2HDhrFjxw6OHTtGjx49/nQGdRERkSdJoVtERCSTlChRgoiICF5//XXeeecdKlSowBtvvMH27dv56KOPgJQuy+vXr8fZ2Zk6derQoEEDSpQowapVqyzH8fX1ZezYsQwfPpxq1aoRHx9Ply5dMlzPzJkzCQ8Px83NjcqVK//l9nnz5qVly5bkypXrgSXL/ihnzpx8/fXXxMXFUa1aNVq1aoW3t/efrqv9KEFBQcyfP5+VK1dSoUIFqlatynfffccXX3zBgAEDMny8Dz/8kJo1a/Lmm2/SoEEDatWqRdmyZXFwcMjwsURERDLKZGRkthIRERF5rnh7e1O+fHlmz55t7VKemNu3b1OkSBFmzpxJjx49rF2OiIhkcVoyTERERB5w7do1du7cyc6dO5k/f761y/lHfvzxR06cOEH16tW5ceMGEydOBMDPz8/KlYmIyPNAoVtEREQeULlyZa5du8bUqVMzNBHa02rGjBmcPHmSbNmy4eXlxa5duyhQoIC1yxIRkeeAupeLiIiIiIiIZBJNpCYiIiIiIiKSSRS6RURERERERDKJQreIiIiIiIhIJlHoFhEREREREckkCt0iIiIiIiIimUShW0RERERERCSTKHSLiIiIiIiIZBKFbhEREREREZFMotAtIiIiIiIikkn+D060pOX7pTGHAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Q4: Total Number of Asylum Claims Made in Canada Every Year\n"
      ],
      "metadata": {
        "id": "0MEAH-LlCUKn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "asylum_seekers_yrly = df.groupby('Year')['Asylum-seekers'].sum().reset_index(name='Asylum-seekers').sort_values(by='Year')\n",
        "\n",
        "asylum_seekers_yrly.reset_index(drop=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "3poZm0enCYIy",
        "outputId": "9d95584c-7c90-453e-f3d3-2d4866f78506"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Year  Asylum-seekers\n",
              "0   2012           32647\n",
              "1   2013           22145\n",
              "2   2014           16699\n",
              "3   2015           19631\n",
              "4   2016           23946\n",
              "5   2017           51859\n",
              "6   2018           78766\n",
              "7   2019           97017\n",
              "8   2020           85352\n",
              "9   2021           63143\n",
              "10  2022          113066"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-363f98d3-95e7-44c5-8b62-1611fffead67\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Year</th>\n",
              "      <th>Asylum-seekers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2012</td>\n",
              "      <td>32647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2013</td>\n",
              "      <td>22145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2014</td>\n",
              "      <td>16699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2015</td>\n",
              "      <td>19631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016</td>\n",
              "      <td>23946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2017</td>\n",
              "      <td>51859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2018</td>\n",
              "      <td>78766</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2019</td>\n",
              "      <td>97017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2020</td>\n",
              "      <td>85352</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2021</td>\n",
              "      <td>63143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2022</td>\n",
              "      <td>113066</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-363f98d3-95e7-44c5-8b62-1611fffead67')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-363f98d3-95e7-44c5-8b62-1611fffead67 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-363f98d3-95e7-44c5-8b62-1611fffead67');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-54ba8554-d630-474a-9734-a317ca3e3793\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-54ba8554-d630-474a-9734-a317ca3e3793')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-54ba8554-d630-474a-9734-a317ca3e3793 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a Seaborn line graph visualize total number of asylum being made in Canada every year\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.lineplot(data=asylum_seekers_yrly, x='Year', y='Asylum-seekers',marker='o')\n",
        "\n",
        "# Adding labels and title\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Count of Asylum Seekers')\n",
        "plt.title('Total Asylum Claims from 2012-2022')\n",
        "\n",
        "# Display the plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "hEJilm4ZCitU",
        "outputId": "2c515ae9-fb48-4518-f577-f8156f601c1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Q5: General Trends in Refugee and Asylum Statistics from 2012-2022"
      ],
      "metadata": {
        "id": "ymrSrN9jCprM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Countries with highest overall count\n",
        "top_countries = df.groupby('Country-of-origin')['total-count'].sum().reset_index(name='total-count').sort_values(by ='total-count', ascending=False).head(10)\n",
        "\n",
        "top_countries.reset_index(drop=True).style.bar()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "_Nq65CKCCsn9",
        "outputId": "f4f43f4b-76fb-44f4-d7bc-84ac4a40968d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7de89acf2860>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_2a8a5_row0_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 100.0%, transparent 100.0%);\n",
              "}\n",
              "#T_2a8a5_row1_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 86.5%, transparent 86.5%);\n",
              "}\n",
              "#T_2a8a5_row2_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 80.8%, transparent 80.8%);\n",
              "}\n",
              "#T_2a8a5_row3_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 80.5%, transparent 80.5%);\n",
              "}\n",
              "#T_2a8a5_row4_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 70.7%, transparent 70.7%);\n",
              "}\n",
              "#T_2a8a5_row5_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 67.5%, transparent 67.5%);\n",
              "}\n",
              "#T_2a8a5_row6_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 65.7%, transparent 65.7%);\n",
              "}\n",
              "#T_2a8a5_row7_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 58.9%, transparent 58.9%);\n",
              "}\n",
              "#T_2a8a5_row8_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 54.1%, transparent 54.1%);\n",
              "}\n",
              "#T_2a8a5_row9_col1 {\n",
              "  width: 10em;\n",
              "  background: linear-gradient(90deg, #d65f5f 52.2%, transparent 52.2%);\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_2a8a5\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_2a8a5_level0_col0\" class=\"col_heading level0 col0\" >Country-of-origin</th>\n",
              "      <th id=\"T_2a8a5_level0_col1\" class=\"col_heading level0 col1\" >total-count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_2a8a5_row0_col0\" class=\"data row0 col0\" >Colombia</td>\n",
              "      <td id=\"T_2a8a5_row0_col1\" class=\"data row0 col1\" >138891</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_2a8a5_row1_col0\" class=\"data row1 col0\" >China</td>\n",
              "      <td id=\"T_2a8a5_row1_col1\" class=\"data row1 col1\" >120112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_2a8a5_row2_col0\" class=\"data row2 col0\" >Nigeria</td>\n",
              "      <td id=\"T_2a8a5_row2_col1\" class=\"data row2 col1\" >112174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_2a8a5_row3_col0\" class=\"data row3 col0\" >Haiti</td>\n",
              "      <td id=\"T_2a8a5_row3_col1\" class=\"data row3 col1\" >111864</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_2a8a5_row4_col0\" class=\"data row4 col0\" >Mexico</td>\n",
              "      <td id=\"T_2a8a5_row4_col1\" class=\"data row4 col1\" >98218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_2a8a5_row5_col0\" class=\"data row5 col0\" >Pakistan</td>\n",
              "      <td id=\"T_2a8a5_row5_col1\" class=\"data row5 col1\" >93760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_2a8a5_row6_col0\" class=\"data row6 col0\" >Ukraine</td>\n",
              "      <td id=\"T_2a8a5_row6_col1\" class=\"data row6 col1\" >91182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_2a8a5_row7_col0\" class=\"data row7 col0\" >India</td>\n",
              "      <td id=\"T_2a8a5_row7_col1\" class=\"data row7 col1\" >81757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_2a8a5_row8_col0\" class=\"data row8 col0\" >Sri Lanka</td>\n",
              "      <td id=\"T_2a8a5_row8_col1\" class=\"data row8 col1\" >75102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_2a8a5_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_2a8a5_row9_col0\" class=\"data row9 col0\" >Unknown</td>\n",
              "      <td id=\"T_2a8a5_row9_col1\" class=\"data row9 col1\" >72545</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create bar graph to visualize which countries have the overall highest count from 2012-2022 of both refugees and asylum seekers\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.barplot(data=top_countries, x='Country-of-origin', y='total-count', palette='plasma')\n",
        "\n",
        "# Create labels and title\n",
        "plt.xlabel('Country of Origin')\n",
        "plt.ylabel('Total')\n",
        "plt.title('Countries With Majority of Refugees and Asylum Seekers from 2012-2022')\n",
        "\n",
        "# Rotate x-axis labels for better visibility\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "# Display plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "b2rLFaeaC4v_",
        "outputId": "558354fc-4a04-4a48-82d8-ae4fb3b6d7bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "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U6aM8ubN6zMtICBADRo00J9//qljx4450z/99FOFhYXp4Ycfdqbly5dPTZs21RdffOHzXaFgwYLy87t8RKhatar8/f19phUvXlxlypRJ06kbefPmVZkyZZJNf+ihhyTJZxlffPGFzp49q2eeecaZ5vF49PTTT+vPP//UypUrJZ3/W1+1atU0LfNK+g+4VpnTuwEAUva///1Pt956a4p/PFLy5JNP6r333lOTJk30/PPPa9WqVRo8eLC2bt2qmTNnXnU7nn32WeXKlUsvv/yyfv/9d40cOVKxsbH6+OOPJUkjR47Us88+q+zZs+u///2vJCksLMxnGc8884zy5cunvn376sSJE6k+19SpU9WmTRvFxMRoyJAhOnnypMaPH6/q1atr/fr1zhfVxo0ba8uWLXr22WdVpEgR7d+/XwsWLNCuXbtS/DLrVb16dS1btky///67U7d8+XI9+eSTuvPOO/Xyyy/ryJEjypkzp8xMK1asUFRUVKpfPtLy2i/Xf5dTs2ZNFShQQNOnT9eAAQMknT/fLnv27GrYsGGy+vj4eE2aNEnNmzdX+/btdezYMb3zzjuKiYnR6tWrL3kRry1btqhGjRoKDg5Wjx49lCVLFr311luqXbu284XwQml5X1Pro1tvvVXVqlXTtGnT1LVrV5/HTJs2TTly5NCDDz6YaltPnTql2rVr65dfflFsbKwiIyM1Y8YMPf744zpy5Iiee+45lSpVSlOnTlXXrl1VoEABPf/885LOf9G8EufOndOff/6pXLly+Uzv2LGjpkyZorZt26pz587auXOnxo4dq/Xr12v58uXKkiWLpk6dqokTJ2r16tWaNGmSJKX5M+21fv161a9fX/nz51f//v2VmJioAQMGpPg6XnnlFb300ktq2rSpnnzySR04cEBjxoxRzZo1tX79eidoLV68WPfee68qVaqkl19+WX5+fpo8ebLuvvtuLVu2THfeeack6amnntKnn36q2NhYlS5dWn///be+++47bd26VbfffnuqbV6zZo1WrFihZs2aqUCBAvr99981fvx41a5dWz/99JOyZcvmU5+Wz0nfvn01aNAgNWjQQA0aNNAPP/ygevXqKSEhIc19+eGHHyooKEj33XefsmbNqqJFi2ratGk+70lCQoJiYmJ05swZPfvsswoPD9eePXs0Z84cHTlyRCEhIWrVqpXat2+vzZs3OzvlvK97+/bt6tOnT5rbdDnLli3T7Nmz1alTJ0nS4MGDdd9996lHjx5688039cwzz+jw4cMaOnSonnjiCS1evPiSyytcuLBWrlyZrO0pud7r08V+/fVX3X333cqdO7cWLFigvHnz6uTJk6pVq5b27Nmjjh07qlChQlqxYoV69eqlv/76K9mFzSZPnqzTp0+rQ4cOCggIUO7cufX222+rc+fOatKkiZ577jmdPn1aGzdu1KpVq1K9RkfNmjWdaz7UrVtXrVu3TlaT0javX79+6t+/v6Kjo/X0009r27ZtGj9+vNasWeNsB7wOHz6s++67T82aNdMjjzyi8ePHq1mzZpo2bZq6dOmip556Si1atNCwYcPUpEkT7d69Wzly5Ljke5SSuLg4ZcuWzedztn79et1+++3J/p7deeedmjhxorZv365y5cpd8XNdzMy0b9++FMN0WsXFxUmSTyBev369goKCVKpUKZ9a77q1fv16Va9e/YqWeanai/sPuGbpe6AdQEqOHj1qkuzBBx9MU/2GDRtMkj355JM+01944QWTZIsXL3amKZWhjhcP0fQOj46OjvY5B6pr166WKVMmO3LkiDPtckOsq1ev7gz9unjezp07zez8eVg5c+ZMdp56XFychYSEONMPHz5skmzYsGGX7JOUfPnllybJOXf7r7/+Mkm2ZMkSO3bsmGXKlMm+/PJLMzs/7EySvfLKK6m2OS2vPS39l5ILh2G+8MILVqxYMWfeHXfcYW3btjUzSza8/Ny5c8mG+x0+fNjCwsLsiSee8Jl+8brQqFEj8/f3t19//dWZtnfvXsuRI4fVrFkz2WtLy/tqlnofvfXWWybJtm7d6kxLSEiwvHnzXna48MiRI02SffDBBz6PjYqKsuzZs1t8fLwzPaUh46kpXLiw1atXzw4cOGAHDhywTZs2WatWrZL187Jly0ySTZs2zefxc+fOTTa9TZs2yYaX79y50yTZ5MmTk7Xh4vfl/vvvt2zZstmePXucaTt27LDMmTPbhX/Gf//9d8uUKZPPOmt2/rzJzJkzO9OTkpKsePHiFhMT47Nunjx50iIjI61u3brOtJCQkKs6feHkyZPJpq1cudIk2fvvv+9MS+vnZP/+/ebv728NGzb0qevdu7dJSvPw8nLlyvkMe+3du7flzZvX59oG69evTzYM92JHjhyxwMBA69mzp8/0zp07W1BQkM/Q44vfzzZt2ljhwoWTLdP7mb+QJAsICPD5PHk/N+Hh4T7rea9evZJ99lIyf/58y5Qpk2XKlMmioqKsR48eNm/ePEtISPCpc2N9unC7tnXrVouIiLA77rjDDh065NQMHDjQgoKCkp1n/OKLL1qmTJls165dZvZ/n6Hg4GDbv3+/T+2DDz5oZcqUuWQ/pObiz7pZ6ts873pZr149Zzi2mdnYsWOTnRdcq1Ytk2TTp093pv38888myfz8/Oz77793ps+bNy/V7cPl7NixwwIDA61Vq1Y+04OCgpL9DTD7v7+Lc+fOTXF5V3p60NSpU02SvfPOO1fUbq8zZ85Y6dKlLTIy0udz2bBhQ7v11luT1Z84ccIk2YsvvnjJ5UZHR1twcHCKp1VcKLX+A64Vw8uBG1B8fLwkpXkP91dffSVJ6tatm89075G9L7/88qrb0qFDB58hjzVq1FBiYqL++OOPNC+jffv2ypQp0yVrFixYoCNHjqh58+Y6ePCg85MpUyZVqVLFGR6dNWtW+fv769tvv/UZxpsWVatWlZ+fn7777jtJco5C3HHHHcqePbvKly/vDIf0/nupPedpcT36r0WLFvrll1+0Zs0a59/UjtZkypTJGe6XlJSkQ4cO6dy5c6pcufIlhwQnJiZq/vz5atSokW699VZnev78+dWiRQt99913znrplZb39VKaNm2qwMBATZs2zZk2b948HTx4UI899tglH/vVV18pPDxczZs3d6ZlyZJFnTt31vHjx7VkyZKrbtf8+fOVL18+5cuXT+XKldPUqVPVtm1bDRs2zKmZMWOGQkJCVLduXZ/1tVKlSsqePXuKw/mvRmJiohYuXKhGjRopIiLCmV6sWDHde++9PrWff/65kpKS1LRpU582hYeHq3jx4k6bNmzYoB07dqhFixb6+++/nboTJ07onnvu0dKlS51hvDlz5tSqVau0d+/eK2p31qxZnf+fPXtWf//9t4oVK6acOXOmuB5e7nOycOFCJSQk6Nlnn/Wpu5Lbv23cuFGbNm3yWWe825t58+Y500JCQiSdXxdPnjyZ4rJCQkL04IMP6sMPP5SZSTr/Xn388cdq1KiRgoKC0tyuy7nnnnt8RvB4R5w0btzY52+Ed/pvv/12yeXVrVtXK1eu1AMPPKAff/xRQ4cOVUxMjG655RbNnj3bqXNjffLavHmzatWqpSJFimjhwoU+o0hmzJihGjVqKFeuXD7PGx0drcTERC1dutRnWY0bN0426iNnzpz6888/tWbNmst17xW5eJvnXS+7dOnicwS5ffv2Cg4OTva3N3v27GrWrJnze4kSJZQzZ06VKlXKZyRRWt/Li508eVKPPPKIsmbNqtdee81n3qlTpxQQEJDsMYGBgc78a/Xzzz+rU6dOioqKUps2ba5qGbGxsfrpp580duxYZc78fwNyr6X9r776qhYuXKjXXnstxdMqvC7Vf8C1Yng5cAMKDg6WpDSfT/THH3/Iz89PxYoV85keHh6unDlzXlHAu1ihQoV8fvd+ObqSwBsZGXnZmh07dkiS7r777hTne/skICBAQ4YM0fPPP6+wsDDddddduu+++9S6dWuFh4df8jly5sypMmXK+ATrihUrOgGhatWqPvP8/f1THRaZVtej/ypWrKiSJUtq+vTpypkzp8LDw1PtJ0l67733NHz4cP388886e/asM/1S78OBAwd08uRJlShRItm8UqVKKSkpSbt37/YZMpiW9/VScubMqfvvv1/Tp0/XwIEDJZ0fWn7LLbdc8vVJ59f54sWLJxsq6R16eC3rfJUqVTRo0CAlJiZq8+bNGjRokA4fPuxz7uKOHTt09OjRFM+Blc6fb3497N+/X6dOnUr22ZaUbNqOHTtkZipevHiKy/IOc/V+1i71pfjo0aPKlSuXhg4dqjZt2qhgwYKqVKmSGjRooNatW/vsmEnJqVOnNHjwYE2ePFl79uxxgql32Re73OfE+35e/Nry5cuXbNh/aj744AMFBQXp1ltv1S+//CLp/Bf2IkWKaNq0ac7pGpGRkerWrZtGjBihadOmqUaNGnrggQf02GOPOYFcklq3bq2PP/5Yy5YtU82aNbVw4ULt27fvkrekuxoX9423DQULFkxxelq2LXfccYc+//xzJSQk6Mcff9TMmTP1xhtvqEmTJtqwYYNKly7tyvrkdf/99yssLEzz5s1T9uzZfWp37NihjRs3pnoayMWfrZS2Qz179tTChQt15513qlixYqpXr55atGihatWqpdrGtLj4ubzr5cXbTX9/f916663JtkMFChRIdt5+SEjINb2XXomJiWrWrJl++uknff311z476aTzO8IuvsaLJOc2WhfuKLsacXFxatiwoUJCQvTpp5/67Jw4evSoTyj29/dX7ty5ky1j2LBhevvttzVw4EA1aNDgurT/448/Vp8+fdSuXTs9/fTTqbb/cv0HXCtCN3ADCg4OVkREhDZv3nxFj0vpokppldI9MSWleiTzwi/Rl5OWP+beIyFTp05NMTxfuMe7S5cuuv/++zVr1izNmzdPL730kgYPHqzFixerYsWKl3ye6tWra8KECTpy5IiWL1/ucy5n1apV9e677+rs2bP67rvvVKlSJWcv+tW6Hv0nnT/aPX78eOXIkUOPPvpoqueZf/DBB3r88cfVqFEjde/eXaGhocqUKZMGDx6c7EJg1+pav6RJ54PLjBkztGLFCpUrV06zZ8/WM888k6aL+Lglb968io6OliTFxMSoZMmSuu+++zRq1ChnNElSUpJCQ0N9jtJf6HLnjaf2WU3tc5gWSUlJ8ng8+vrrr1Nc77zhxvtZGzZsWKrn+HtrmzZtqho1amjmzJmaP3++hg0bpiFDhujzzz9PdqT9Qs8++6wmT56sLl26KCoqSiEhIfJ4PGrWrFmyo57S9fucpMbM9OGHH+rEiRMqXbp0svn79+/X8ePHndc9fPhwPf744/riiy80f/58de7cWYMHD9b333/vXEArJiZGYWFh+uCDD1SzZk198MEHCg8Pd9ad1Fzpe59a31yPPvNeYPKOO+7Qf/7zH7Vt21YzZszQyy+/7Mr65NW4cWO99957mjZtmjp27OgzLykpSXXr1lWPHj1SXNZ//vMfn99T2g6VKlVK27Zt05w5czR37lx99tlnevPNN9W3b1/1798/5c5Ig2vd5rn5XrZv315z5szRtGnTUtxpmT9/fv3111/JpnunXUvIPHr0qO69914dOXJEy5YtS7as5557zucil7Vq1dK3337rUzNlyhT17NlTTz31VIrXRMifP7+++eYbmZnPZ+hS7V+wYIFat26thg0basKECZd8DZfrP+BaEbqBG9R9992niRMnauXKlYqKirpkbeHChZWUlKQdO3b4XGRk3759OnLkiAoXLuxMy5UrV7KrqiYkJKT4xzitriXsexUtWlTS+avnXu5Lq7f++eef1/PPP68dO3aoQoUKGj58uD744INLPq569eoaP368Fi5cqPXr16t79+7OvKpVq+rUqVP68ssv9dtvv6lx48aXbcf1eO1p0aJFC/Xt21d//fWXpk6dmmrdp59+qltvvVWff/65T9tefvnlSy4/X758ypYtm7Zt25Zs3s8//yw/P79kR2PS6lJ9VL9+feXLl0/Tpk1TlSpVdPLkyTQdKSxcuLA2btyopKQkn4Duvcr7hev8tWrYsKFq1aqlV199VR07dlRQUJCKFi2qhQsXqlq1alf1Rdx71O/iz+LFR8ZCQ0MVGBjoHJm90MXTihYtKjNTZGRksmBycZ10fudeWj5r+fPn1zPPPKNnnnlG+/fv1+23365XXnnlkqH7008/VZs2bTR8+HBn2unTp5O93rTyvp87duzwOcp+4MCBNB0NXLJkif78808NGDAg2YWYDh8+rA4dOmjWrFk+pzWUK1dO5cqVU58+fbRixQpVq1ZNEyZM0KBBgySdD0otWrTQlClTNGTIEM2aNStNp1yktA2Wrm10xvVQuXJlSf8XYtxan6TzAT1z5sx65plnlCNHDp/TZYoWLarjx4+neVmpCQoK0qOPPqpHH31UCQkJevjhh/XKK6+oV69e17wz1cu7Xm7bts1nvUxISNDOnTuv+TWkVffu3TV58mSNHDnS5/SJC1WoUEHLli1Lts1ctWqVsmXLdsn3+FJOnz6t+++/X9u3b9fChQtT3KnVo0cPn8/WxaNTvvjiCz355JN6+OGHNW7cuFTbP2nSJG3dutXnOVatWuXMv9CqVav00EMPqXLlyvrkk098dtxfLC39B1wrzukGblA9evRQUFCQnnzySec2Khf69ddfNWrUKElyhmFdfFXXESNGSJLPVa6LFi2a7Jy4iRMnXtMRtqCgoKv+Mu0VExOj4OBgvfrqqz5Dor28tw86efKkM5zMq2jRosqRI0eKQ88u5j1He8SIETp79qzPke4iRYoof/78Gjp0qE/tpVyP154WRYsW1ciRIzV48OBLDnn3fuG/8AjJqlWrnNupXOpx9erV0xdffOFz26F9+/Zp+vTpql69ujPE/0pdqo8yZ86s5s2b65NPPtGUKVNUrlw5lS9f/rLLbNCggeLi4nyubn3u3DmNGTNG2bNnV61ata6qranp2bOn/v77b7399tuSzh8BTkxMdIbFX+jcuXOXXSeCg4OVN2/eZJ/FN9980+f3TJkyKTo6WrNmzfI5r/qXX37R119/7VP78MMPK1OmTOrfv3+yI2Rmpr///luSVKlSJRUtWlSvv/66jh8/nqxt3s9aYmJisqHgoaGhioiIuOxnLVOmTMnaMGbMmKvezkRHRytLliwaM2aMz3Iv3ualxju0vHv37mrSpInPT/v27VW8eHFn1EJ8fLzOnTvn8/hy5crJz88v2etu1aqVDh8+rI4dO+r48eOXvRaBdP6zfPToUW3cuNGZ9tdff13TXSauhPdo4cW81wbxDpW+3uvThTwejyZOnKgmTZqoTZs2PueSN23aVCtXrvQ5z97ryJEjyd6blHjb5uXv76/SpUvLzFL8+3K1oqOj5e/vr9GjR/v00TvvvKOjR4+meIeJ623YsGF6/fXX1bt3b5/biF6sSZMm2rdvnz7//HNn2sGDBzVjxgzdf//9KZ4vfTmJiYl69NFHtXLlSs2YMSPVAwSlS5dWdHS081OpUiVn3tKlS9WsWTPVrFlT06ZNS3WU04MPPqgsWbL4bCPNTBMmTNAtt9zi87d869atatiwoYoUKaI5c+ZccsdoWvsPuFYc6QZuUEWLFtX06dP16KOPqlSpUmrdurXKli2rhIQErVixwrk9kiTddtttatOmjSZOnKgjR46oVq1aWr16td577z01atRIderUcZb75JNP6qmnnlLjxo1Vt25d/fjjj5o3b16abqORmkqVKmn8+PEaNGiQihUrptDQ0CsenhUcHKzx48erVatWuv3229WsWTPly5dPu3bt0pdffqlq1app7Nix2r59u+655x41bdpUpUuXVubMmTVz5kzt27fP5wI1qSlUqJAKFiyolStXqkiRIsmGpFWtWlWfffaZPB5Pms7/ux6vPa3S8oXgvvvu0+eff66HHnpIDRs21M6dOzVhwgSVLl06xS/EFxo0aJAWLFig6tWr65lnnlHmzJn11ltv6cyZM86OiKtxuT5q3bq1Ro8erW+++UZDhgxJ0zI7dOigt956S48//rjWrVunIkWK6NNPP9Xy5cs1cuTIq7rNzqXce++9Klu2rEaMGKFOnTqpVq1a6tixowYPHqwNGzaoXr16ypIli3bs2KEZM2Zo1KhRatKkySWX+eSTT+q1117Tk08+qcqVK2vp0qXavn17srp+/fpp/vz5qlatmp5++mklJiZq7NixKlu2rDZs2ODUFS1aVIMGDVKvXr30+++/q1GjRsqRI4d27typmTNnqkOHDnrhhRfk5+enSZMm6d5771WZMmXUtm1b3XLLLdqzZ4+++eYbBQcH63//+5+OHTumAgUKqEmTJrrtttuU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UUOBgYEqWLCghg4dmqw9M2bMUMmSJRUYGKhy5crpq6++cueFAwAAAABuCjd06B4yZIjGjx+vsWPHauvWrRoyZIiGDh2qMWPGODVDhw7V6NGjNWHCBK1atUpBQUGKiYnR6dOnnZqWLVtqy5YtWrBggebMmaOlS5eqQ4cOzvz4+HjVq1dPhQsX1rp16zRs2DD169dPEydOdGpWrFih5s2bq127dlq/fr0aNWqkRo0aafPmzf9MZwAAAAAAMpwbOnSvWLFCDz74oBo2bKgiRYqoSZMmqlevnlavXi3p/FHukSNHqk+fPnrwwQdVvnx5vf/++9q7d69mzZolSdq6davmzp2rSZMmqUqVKqpevbrGjBmjjz76SHv37pUkTZs2TQkJCXr33XdVpkwZNWvWTJ07d9aIESOctowaNUr169dX9+7dVapUKQ0cOFC33367xo4d+4/3CwAAAAAgY7ihQ3fVqlW1aNEibd++XZL0448/6rvvvtO9994rSdq5c6fi4uIUHR3tPCYkJERVqlTRypUrJUkrV65Uzpw5VblyZacmOjpafn5+WrVqlVNTs2ZN+fv7OzUxMTHatm2bDh8+7NRc+DzeGu/zAAAAAABwsRv6Qmovvvii4uPjVbJkSWXKlEmJiYl65ZVX1LJlS0lSXFycJCksLMzncWFhYc68uLg4hYaG+szPnDmzcufO7VMTGRmZbBneebly5VJcXNwlnyclZ86c0ZkzZ5zf4+Pj0/zaAQAAAAAZ3w19pPuTTz7RtGnTNH36dP3www9677339Prrr+u9995L76alyeDBgxUSEuL8FCxYML2bBAAAAAD4B93Qobt79+568cUX1axZM5UrV06tWrVS165dNXjwYElSeHi4JGnfvn0+j9u3b58zLzw8XPv37/eZf+7cOR06dMinJqVlXPgcqdV456ekV69eOnr0qPOze/fuK3r9AAAAAICM7YYO3SdPnpSfn28TM2XKpKSkJElSZGSkwsPDtWjRImd+fHy8Vq1apaioKElSVFSUjhw5onXr1jk1ixcvVlJSkqpUqeLULF26VGfPnnVqFixYoBIlSihXrlxOzYXP463xPk9KAgICFBwc7PMDAAAAAPj3uKFD9/33369XXnlFX375pX7//XfNnDlTI0aM0EMPPSRJ8ng86tKliwYNGqTZs2dr06ZNat26tSIiItSoUSNJUqlS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JzvTIiMjnf+bmUaOHKk+ffrowQcflCS9//77CgsL06xZs9SsWTNt3bpVc+fO1Zo1a1S5cmVJ0pgxY9SgQQO9/vrrioiI0LRp05SQkKB3331X/v7+KlOmjDZs2KARI0Y44XzUqFGqX7++unfvLkkaOHCgFixYoLFjx2rChAn/VJcAAAAAADKQG/pI9+zZs1W5cmU98sgjCg0NVcWKFfX2228783fu3Km4uDhFR0c700JCQlSlShWtXLlSkrRy5UrlzJnTCdySFB0dLT8/P61atcqpqVmzpvz9/Z2amJgYbdu2TYcPH3ZqLnweb433eVJy5swZxcfH+/wAAAAAAP49bujQ/dtvv2n8+PEqXry45s2bp6efflqdO3fWe++9J0mKi4uTJIWFhfk8LiwszJkXFxen0NBQn/mZM2dW7ty5fWpSWsaFz5FajXd+SgYPHqyQkBDnp2DBglf0+gEAAAAAGdsNHbqTkpJ0++2369VXX1XFihXVoUMHtW/fPsMM5+7Vq5eOHj3q/OzevTu9mwQAAAAA+Afd0KE7f/78Kl26tM+0UqVKadeuXZKk8PBwSdK+fft8avbt2+fMCw8P1/79+33mnzt3TocOHfKpSWkZFz5HajXe+SkJCAhQcHCwzw8AAAAA4N/jhg7d1apV07Zt23ymbd++XYULF5Z0/qJq4eHhWrRokTM/Pj5eq1atUlRUlCQpKipKR44c0bp165yaxYsXKykpSVWqVHFqli5dqrNnzzo1CxYsUIkSJZwrpUdFRfk8j7fG+zwAAAAAAFzshg7dXbt21ffff69XX31Vv/zyi6ZPn66JEyeqU6dOkiSPx6MuXbpo0KBBmj17tjZt2qTWrVsrIiJCjRo1knT+yHj9+vXVvn17rV69WsuXL1dsbKyaNWumiIgISVKLFi3k7++vdu3aacuWLfr44481atQodevWzWnLc889p7lz52r48OH6+eef1a9fP61du1axsbH/eL8AAAAAADKGG/qWYXfccYdmzpypXr16acCAAYqMjNTIkSPVsmVLp6ZHjx46ceKEOnTooCNHjqh69eqaO3euAgMDnZpp06YpNjZW99xzj/z8/NS4cWONHj3amR8SEqL58+erU6dOqlSpkvLmzau+ffv63Mu7atWqmj59uvr06aPevXurePHimjVrlsqWLfvPdAYAAAAAIMO5oUO3JN133326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dAMAAAAA4BJC978UF60HkJpevXppwIAB6d0MAAD+EXwvhtu4T/e/jJnJ4/EoMTFRmTPz9rvB28dwR1JSkvz82F/ollOnTqlgwYKqUaOGz3TWa/fRx7gZsB67h769/lLrU/oa1xv36f4X8W5AFi5cqClTpujkyZO69dZb9frrr6d3024a3j7+7rvvtGbNGu3evVvt27dXkSJFlDVr1vRuXoZ3YeD+448/dOzYMZUpU0aS5PF4+CN5nXj7ecGCBfrmm2/06quvSuJLyPXk7ctff/1V8fHx8vf3V/HixeXv75/eTbspePt306ZNOnjwoIKCgnTnnXemd7NuKt4+3rt3rxISEpSYmKiiRYv6zMO18fbjiRMn5O/vL4/HwwGT68jbv0uWLNEnn3yipKQkFS9eXN26dfOZj2uTUj/+Gw+g/Lte7b+cx+PRrFmz1KRJE2XLlk1VqlTR5MmT1axZM+3duze9m5fheTcqM2fO1AMPPKB58+bp+++/V3R0tCZPnqyDBw+mdxMztAs30H379tV9992nqlWr6p577tH777+v06dPO8EbV+bCPjMzp583btyoIUOG6OWXX5Yk+vc68W4rPvvsM9WuXVvNmjVTuXLl1KpVK82ZMye9m3dT8G6Lq1atqo4dO+quu+7SSy+9pGPHjqV3024K3nV41qxZatSoke6++261atVKbdu2lSSCynXg7eOvvvpKrVu3VuXKldWzZ099++236d20m4Z3O9GoUSMdPXpUfn5+eu211/T0008783FtLtyxMWzYMA0cOFDHjx//1wVuSZLhprV//36f3zdt2mT/+c9/bNy4cWZm9tdff1n+/PktU6ZMVqdOHdu7d296NPOmsnz5csufP7+9++67ZmZ2+vRp8/Pzs8KFC9vw4cPt77//TucWZnz9+vWz8PBwmzVrlh08eNBq1qxppUuXttdff91OnjxpZmZJSUnp3MqMZ9++ffbbb7+ZmdlHH31k8+fPt1OnTtmYMWMsV65c9t///teppX+v3YoVKyxHjhz25ptv2q+//mrz58+3evXqWb169ezLL79M7+ZlWN51c//+/VapUiV79913bfv27TZ9+nTLnDmzxcbG2pEjR9K5lTeHefPmWdasWe3NN9+0X375xSZMmGAej8dmzJiR3k27aXzxxReWNWtW69u3rw0fPtwaNWpkZcuWta+++iq9m3ZTWLdunUVGRtr48ePNzOzXX3+1fPnymcfjsUceecSp42/etZk9e7YFBARY9erVLTQ01IoXL26rVq1K72b94wjdN6lhw4ZZly5d7MyZM87GYuHChc4X5927d1tkZKQ99dRTtn79esuVK5c1bdrUdu/enZ7NztDOnTtnU6ZMsR49epjZ+Y13kSJFLDY21p599lkLDAy0kSNHWlxcXDq3NONYvny5z+/r1q2zypUr27x588zM7JtvvrGgoCCLioqy4sWL28iRIwneV+Hvv/+2MmXKWPfu3W3cuHHm8XicHUeHDh2ykSNHEryvs9dee81q1arlM2316tVWp04da9WqlZnRx1dr7ty51rt3b3viiSfs2LFjzvQ5c+ZYlixZCN7XQVJSknXt2tXZJvz5559WuHBh69SpUzq3LOM6evSoz+8//fSTlStXziZOnGhmZocPH7bQ0FArWbKklSxZkuB9HXz66afWrVs3MzPbtWuXRUZGWvv27e2zzz6zzJkz21NPPZXOLcy4vH+/jh8/bk8++aRNnjzZzp49a0ePHrWYmBi75ZZb7LvvvkvnVv6zCN03qUmTJtnPP/9sZudXeDOzhIQE27BhgyUlJVnjxo2tZcuWlpCQYCdPnrSoqCjzeDzWsGFDO3fuXHo2PUPbunWr/fTTT3by5Em75557rF27dmZ2PpCHhoZa3rx5bdy4cZaYmJjOLb3xDRkyxKpVq2ZJSUlOf+3du9fee+89O336tH3zzTeWL18+mzRpkpmZVaxY0UqVKmV9+/a1U6dOpWfTM4zVq1c7/58+fbqFhoaax+Ox4cOH+9RdGLz79u37TzfzpjR06FCrVKmSnThxwszMWce/+OILy5Qpk/3666/p2bwM7c033zSPx2MFChRwRnB5+3fOnDmWLVs2e/zxx5OFHKRdUlKS3X333fbaa6/ZgQMH7JZbbrEOHTo4X7Tff/99+/TTT9O5lRnHwIEDrW7duj7fv3799Vd78skn7ciRI7Zr1y4rVqyYPfXUU7ZixQorXbq0lShRwmbOnJl+jc5gLtyJuWHDBjt69KglJCTYmjVr7Ny5c9agQQNr3bq1mZkdPHjQSpYsaR6Pxx577LH0anKGt2zZMitdurTdfffd9v333/vM8wbviw+u3MwI3Te57777zjp27GibN292psXHx1uVKlXsvffec6Y988wz9s033/BF7wp4N+Bnz55NNm/btm1Wrlw5W7hwoZmZ7dy505o3b27PPvus7dix4x9tZ0a1e/dup2+3b99uZud3Xhw6dMiSkpKsefPm9vzzzztfUh599FG79dZbLTY2liOEaTBp0iSrX7++HTx40MzO93dISIjlzJnTevfubb/88otP/aFDh2zMmDHm8Xhs0KBB6dHkDMu7Pm7dutU5xWTOnDnm8Xhs1qxZPrXr1q2zUqVKsS2+Ru+//775+fnZgAEDnMDtfR8+//xzy5cvH6OOrtGgQYOsVatWVrBgQWvfvr2Zne/jEydOWPv27W3QoEGWkJCQzq3MGH7//Xfne9rp06ed6d7TBNu3b2/Nmzd3dtI1bdrUwsPDrWrVqhYfH8/fvEu4+HP+22+/WUhIiG3atMmnpmLFijZ//nwzMzt27Jg98cQTNnPmTL6zXaEL18UDBw7Y7bffbh6PxxmheOFBp4YNG1pgYGCyQH6zInTf5MaNG2fFixe32NhY27Ztm5mZnTp1yooUKWLNmjWz9evX2wsvvGCFChXiC8gV8G5Uvv76a3vooYfs8ccftwkTJjjzly5dauHh4fbRRx/ZX3/9Zf369bN69epxBPYqzJs3zzwej33xxRfOtHPnzll0dLR17tzZmdayZUubN29esi/YSNmePXucc7i9RwP37NljU6dOtYiICOvWrVuy4J2QkGBvvvmmM4oGl+ddD2fOnGlFihSxQYMGOaOPunTpYkFBQfbZZ5/ZwYMH7ezZs9ajRw8rWbKkHThwID2bnWF4+/fMmTN25swZn3lvvvmm+fn52WuvvebUXTjkEWnj7bO4uDj7+++/nSA9b948y507t5UpU8bZSXTmzBnr3bu3FSpUiLCSBj/88IPFx8c7v3/zzTdWtWpVn1P9Tp8+bVWqVLE+ffqY2fnQ0qFDBxs9ejTbicsYN26c3XfffbZu3Tpn2tatW+3WW2/12QYcPHjQcufObZ07d7YDBw5Yz549rWzZssmujYS0WbRokQ0bNszMzu84uuOOO6x06dLOd4oLv581btzYObBysyN0/wuMGzfOKlasaE8//bT99NNPZma2ePFiy507txUpUsQKFixoP/zwQzq3MuNZuHCh+fv7W6tWraxBgwaWJ08e59wgM7MmTZpYcHCwFS9e3PLmzeuz0UfqLtwYL1682L799lvr0KGD5cmTx+bMmWNm57+EtG7d2qpUqWJPPPGE1axZ08qUKeMc9Wb4/qVd2D/r1q2zu+66y9555x1n2sSJEy0iIsK6d+/ufHHu27evcxQAV2bevHkWGBhoEydOdHZ0mJ0Pft26dbPMmTNbiRIlrHLlypYnTx62x2nk3VbMnTvXGjVqZDVr1rQnnnjC4uLinHnjxo0zPz8/Gzp0KDvirsHMmTOtWLFiVq5cObvrrrtsz549Zmb22WefWVBQkNWtW9fq1atnjRs3trx587IOX0ZSUpJ9++235vF4bNy4cc4R7N9++81CQ0OtVq1aTh+fPXvW2rZtazVr1rSpU6faCy+8YAULFuQaPGmwYMECK1CggLVq1crWrl1rZucvKlymTBmnxjuibvLkyRYYGGiFCxe28PBw1uGrdPbsWRs2bJiVL1/e1qxZY2bnL9RasWJFK1eunLOD7t+4PSZ030S8G45ff/3VObfYa9y4cVahQgV7+umnnT1KBw8etB9++MH27duXLu3NaC4MKr///rt99tlnNnr0aDM7P/T23XffNX9/f4uNjXXqPvzwQ/vss898vmgjdRf2ca9evaxo0aL2+++/244dO6xDhw4WEhJis2fPNrPzF/964okn7OGHH7YWLVo4R18I3Ffmzz//tLp169o999yTLHgXKVLEHnzwQWvWrJl5PB7nDyjS7ty5c9a6detkF5i68AvHokWLbNKkSfbWW2+xrbhCs2bNsuDgYIuNjbX333/fbrnlFmvYsKGtWbPG6ePx48ebx+OxkSNHpnNrM46kpCSn/3766SfLlSuXDR061MaNG2c1a9a00NBQW79+vZmd3zk6ePBga9asmQ0bNswZVYfL69mzpwUGBtr48eOdI96///67FS1a1KpVq+YE73nz5tkDDzxgBQoUsLJly7ITPw286++SJUssMjLSWrRoYVu2bLHvvvvOihUrluLIw99++82++eYb+/PPP//p5mZoFwfotWvXWq1atWzAgAHONG/wvv322/81R7YvRujO4N577z17++23nd8/+ugjK1iwoIWGhlqxYsXskUcecULI2LFjrWLFihYbG+tzLgsubejQoT5XwP3tt98sODjYQkNDbcqUKc70kydPOsH7ueeeS4eW3jz++usva9u2rXMOkNn5nUne4O09D/bi4aQpnV+Py9u9e7c9+OCDVrNmTZ/g/eGHHzo7NthmXF6PHj18drqZnd8ulC1b1hkaevGXEy7mdfW2bt1qpUuXtrFjx5rZ+euV3HLLLRYYGGgVK1a0tWvXOn//Jk2a5LMjGmmzYsUKmzdvnvXr18+ZdvDgQWvYsKGFhobahg0b0rF1GdeF57r/97//tYCAAJs0aZJzVf2dO3da0aJFLSoqyjkwcujQIdu9ezdDyq+A9/P/7bffOlcmHzFihJUpU8Y+//xz++STT2zu3Lm2YMECmzx5sm3cuDGdW5xxLViwwLp16+aMOHzvvffM39/fGWFgdn6oeWRkpFWrVu1feb0HQncGtn//frvvvvusSpUq9tFHH9nevXud+w0uXrzYCeA1a9Z0HjNu3DgrUqSIPf/88//KFf5K/fXXX1alShWfc1j37NljAwYMsNy5czu3B/M6efKkvffee+bxeKxXr17/dHNvClOmTLGAgAArVapUsi90v/76q3Xs2NHy5Mljn3zyic+8f+NQpSvl7aNdu3bZDz/8YH/99ZezQ+mPP/5IMXifOnUq2c4NJJeUlGT/+9//Ugwhjz32mD3wwAPOResuPIL40ksvcfuqy7jws33h1Z03btxoAwYMsLNnz9qePXvs1ltvtWeffdb27dtn+fPnt3vvvddWrFjBtiGNunTpYm+++abz+4kTJ6xSpUrm8Xic29h5eYN3gQIFGIZ7FS48Cjt79mwLDg62PHny2FtvveVsk73Bu0aNGhx5vQ4WLlxokZGRVqBAAQsODrZKlSpZ4cKFrWzZslayZEmLiIhIdh0TXF5SUpKdOXPGihcvbh6Px6Kjo23mzJl2+PBhe+GFF+zOO+/0uWbUgQMH/rUjugjdGdyGDRvsscceszp16ljXrl2d24B5bd261W655RafWx688847/9oV/mp4ryS6bNkyZ/jX3r177ZVXXrHAwEAbMmSIT/2JEyds+vTptnXr1n+8rTeDv//+2+69917zeDzOOdwX+u2336xp06ZWr169dGhdxnXhlZtLlCjhDFN84YUXbOfOnWb2f8H77rvvtvHjx6djazO2efPmObcLNDMbNWqUFStWzN544w3n6uVmZi+99JKVKVOGi1imwYVH9+bNm2czZsywxMRE5+h1q1atrEWLFs65sTExMebxeKxWrVo+V4NG6saMGZMsQG/atMnuvfdeK1SokP31119m9n/bkr///tuqV69uJUqUYMfcVfjf//5nmTJlsiFDhlj//v3t0UcftSxZstj48eOd4P37779brly5rH79+tzONY286+fGjRttzpw5tn79eueiad6h5o0bN7YVK1Y46+3Zs2e5uOIVunhn5rfffmu1atWymjVrWps2baxp06bWt29fa9mypb355puc+meE7pvChg0brGXLlhYZGWl33XWXM9071Padd96x0qVLO1+sceWOHTtmZcqUscjISCd4x8XF2auvvmrBwcHJgjfSJrWN8NGjR6169eoWGRlpW7ZsSTZ/z549bMAv48L+8f7/66+/tuDgYHvjjTfsxIkT9tJLL1loaKi1aNHC2cO/a9cuq1OnjjVs2JAjsGl08ZePzz77zDwej3Xo0MGZ1rlzZytTpoxFR0fbM888Y40bN7bg4GDnvFik7siRIxYWFmYvvfSSzZ49O9mt1s6ePWu1atVyrpZrZta1a1dbvXo1t167Cl999ZWNGDHC+X3r1q1WuXJlK1myZLLRGocOHbJdu3alSzszstOnTzvbggt1797dsmTJYm+99Zaz/f3jjz+4EvwVmjFjhuXLl8/Cw8OtZMmS1qlTJ2fd9R7xbt269b/mVlVuWbZsmW3evNmOHz9up0+ftl69etlrr71mixYtsqFDh1pgYKBlzZrVypYta4cPH07v5qY7QncGduGX6h9//NGaNWtm2bJl87l1lZnZ7NmzrUCBAvbHH3/80028qWzYsMEqVqxo5cuXd4L3X3/9Za+++qrlyZPHXn755fRtYAZz4fr78ccfW9++fe2VV15xLpR27Ngxq1q1qhUvXjzVczEJ3pe2c+dO54vbvn37rGHDhjZw4EAzO396SuHCha169epWvnx5a9GihbNjbvfu3VwZ9yr8+OOPtnfvXktMTLQvvvjCsmfPbm3btnXmv/vuu9a5c2erWbOmPf300ynuUEJyCQkJNmPGDAsICLCAgAD76KOPzOz/Pv8JCQl222232b333mtfffWVPf/889yH+xq8/vrr5vF4nAuFmpn9/PPPVqlSJStZsqQzWoNh+1cnKSnJzp49a9WqVXO+N1w4QrFRo0YWERFhY8aM8bmeDNJmz549FhMTY++8847t2rXLXn31VatWrZo1a9bMCd6LFy+24OBga9++PSNhrlJSUpLVqFHDihQpYi+++KLt3r3bVq9ebeXLl3dGzCxZssTq1KljuXPn5juFEbozpAv3MCckJDhHtDdu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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# General trends in number of refugees and asylum seekers\n",
        "\n",
        "# Group the data by year and calculate the sum of each category for each year\n",
        "yearly_counts = df.groupby('Year')[['UNHCR-refugees', 'Asylum-seekers']].sum().reset_index()\n",
        "\n",
        "# Pivot the data to create a suitable format for bar plotting\n",
        "melted_data = pd.melt(yearly_counts, id_vars=['Year'], var_name='Category', value_name='Count')\n",
        "\n",
        "# Create a bar graph with unstacked, side-by-side bars using Matplotlib\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(data=melted_data, x='Year', y='Count', hue='Category', palette='mako')\n",
        "\n",
        "# Adding labels and title\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Count')\n",
        "plt.title('Total of Refugees and Asylum Seekers from 2012-2022')\n",
        "\n",
        "# Display the legend\n",
        "plt.legend()\n",
        "\n",
        "# Display the plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "S7nhptjKDTTN",
        "outputId": "95e8bfd9-bfa6-4f41-8fc0-9d295cfcda7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
